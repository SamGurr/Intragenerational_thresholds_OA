library('car')
library('lmtest')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('car')
library('lmtest')
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(lsmeans)        # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
# Set Working Directory:
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
############################################################################################# #
############################################################################################# #
#########################  RESP RATE DATA ################################################### #
############################################################################################# #
############################################################################################# #
# upload relative SMR data (calculation for this table in "Resp.Tables.R")
DATA <- read.csv(file="Data/SDR_data/Final_table_for_resp_analysis.csv", header=T) #read Size.info data
DATA.pre <- DATA %>%
dplyr::filter(Date %in% 20190723) # 21-day experiment began on 20190723
DATA.experiment <- DATA %>%
dplyr::filter(Date > 20190723) # 21-day experiment began on 20190725
DATA_Days.1.14 <- DATA.experiment %>%  # divide dataset into first 14 days (same treatment)
dplyr::filter(Date < 20190808)
DATA_Days.15.21 <- DATA.experiment %>%  # and last 7 days (same treatment)
dplyr::filter(Date > 20190807)
# t.test of "pre" data prior to the experiment
t.test(resp.COUNT.µg.L.hr.indiv~Treatment.history, data=DATA.pre) # p-value = 0.5516; no difference between pCO2 treatment
# MODELS FOR DAYS 1 - 7 ----------------
# MODELS FOR DAYS 1 - 7 -------------------------------------------------------- #
Days.1.7 <- DATA_Days.1.14 %>%
dplyr::filter(Date < 20190801 ) # filter dataframe for the correct dates
# make date a character to address as a factor in the model
Days.1.7$Date <- as.factor(Days.1.7$Date)
# interaction plots
interaction.plot(Days.1.7$Treatment.history, Days.1.7$Date, Days.1.7$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.1.7$Treatment.history, Days.1.7$Treatment.EXP_1, Days.1.7$resp.COUNT.µg.L.hr.indiv)
# two way ANOVA treatment and date
# resp.MEAN.µg.L.hr.mm
# resp.COUNT.µg.L.hr.indiv
threewayanova_D1.7 <- aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Date, data=Days.1.7) # run the model
interaction.plot(Days.1.7$Date, Days.1.7$Treatment.EXP_1, Days.1.7$resp.COUNT.µg.L.hr.indiv)
shapiro.test(residuals(threewayanova_D1.7)) # shaprio wilk test of model residuals p = 0.162; normal distribution
hist((residuals(threewayanova_D1.7)))
summary(threewayanova_D1.7) # marginal effect of treatment history
TukeyHSD(threewayanova_D1.7, 'Treatment.history', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
TukeyHSD(threewayanova_D1.7, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# MODELS FOR DAYS 1 - 7 -------------------------------------------------------- #
Days.1.7 <- DATA_Days.1.14 %>%
dplyr::filter(Date < 20190801 ) # filter dataframe for the correct dates
# make date a character to address as a factor in the model
Days.1.7$Date <- as.factor(Days.1.7$Date)
# interaction plots
interaction.plot(Days.1.7$Treatment.history, Days.1.7$Date, Days.1.7$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.1.7$Treatment.history, Days.1.7$Treatment.EXP_1, Days.1.7$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.1.7$Date, Days.1.7$Treatment.EXP_1, Days.1.7$resp.COUNT.µg.L.hr.indiv)
# two way ANOVA treatment and date
# resp.MEAN.µg.L.hr.mm
# resp.COUNT.µg.L.hr.indiv
threewayanova_D1.7 <- aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Date, data=Days.1.7) # run the model
shapiro.test(residuals(threewayanova_D1.7)) # shaprio wilk test of model residuals p = 0.162; normal distribution
hist((residuals(threewayanova_D1.7)))
summary(threewayanova_D1.7) # marginal effect of treatment history
TukeyHSD(threewayanova_D1.7, 'Treatment.history', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
TukeyHSD(threewayanova_D1.7, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
Days.8.14 <- DATA_Days.1.14 %>%
dplyr::filter(Date > 20190731) # make dataframe
# make date a character to address as a factor in the model
# interaction plots
interaction.plot(Days.8.14$Treatment.history, Days.8.14$Date, Days.8.14$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.8.14$Treatment.history, Days.8.14$Treatment.EXP_1, Days.8.14$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.8.14$Date, Days.8.14$Treatment.EXP_1, Days.8.14$resp.COUNT.µg.L.hr.indiv)
Days.8.14$Date <- as.factor(Days.8.14$Date)
# two way ANOVA treatment and date
threewayanova_D8.14 <- aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Date, data=Days.8.14) # run the model
shapiro.test(residuals(threewayanova_D8.14)) # shaprio wilk test of model residuals p = 0.8904; normal distribution
hist((residuals(threewayanova_D8.14)))
summary(threewayanova_D8.14) # significant effect of treatment
TukeyHSD(threewayanova_D8.14, 'Date', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# t.test of "pre" data prior to the experiment
t.test(Length~Treatment_history, data=Size.pre) # p-value = 0.5516; no difference between pCO2 treatment
#Title: Shell.size.Analysis
#Author: Sam Gurr
#Edited by: Sam Gurr
#Date Last Modified: 20190628
#See Readme file for details
rm(list=ls()) #clears workspace
## install packages if you dont already have them in your library
if ("devtools" %in% rownames(installed.packages()) == 'FALSE') install.packages('devtools')
if ("segmented" %in% rownames(installed.packages()) == 'FALSE') install.packages('segmented')
if ("plotrix" %in% rownames(installed.packages()) == 'FALSE') install.packages('plotrix')
if ("gridExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('gridExtra')
if ("LoLinR" %in% rownames(installed.packages()) == 'FALSE') install_github('colin-olito/LoLinR')
if ("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if ("chron" %in% rownames(installed.packages()) == 'FALSE') install.packages('chron')
if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
#Read in required libraries
##### Include Versions of libraries
#install_github('colin-olito/LoLinR')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
# Load packages and pacage version/date/import/depends info
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(lsmeans)        # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
library(gridExtra)      # Version: 2.3, Date/Publication: 2017-09-09, Imports: gtable, grid, grDevices, graphics, utils
library(reshape)        # Version: 0.8.7, Date/Publication: 2017-08-06, Depends: R (>= 2.6.1) Imports: plyr
library(multcompView)   # Version: 0.1-7, Date/Publication: 2015-07-31, Imports: grid
library(Rmisc)
library(lmtest)
library(car)
#Required Data files
# Set Working Directory:
# setwd("~/MyProjects/Geoduck_Conditioning/RAnalysis/") #set working
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
#Load Sample Info
Size.data <- read.csv(file="Data/Shell_length/20190628_shell_size.csv", header=T) #read sample.info data
Size.data.ALL <- read.csv(file="Data/Shell_length/Shell_length_data.csv", header=T) #read sample.info data
ID.reference.all <- read.csv(file="Data/Tank.ID.reference.subsequent.csv", header=T) #read sample.info data
################################################################################################################### #
# DATA CARPENTRY FOR FIGURES AND STATISTICAL ANALYSIS   ########################################################### #
################################################################################################################### #
# Merge ID.ref with shell size; select desired columns; divide into treatment periods; rbind to one table
# ID ref modifications - filter tank IDs for treatment periods
# ID.reference.D.1.14 <- ID.reference.all %>%  dplyr::filter(Tank.ID == 1:36) %>%  dplyr::select(Tank.ID, INITIAL.TREATMENT.ID)
# ID.reference.D.15.21 <- ID.reference.all  %>%  dplyr::select(Tank.ID, TREATMENT.ID.TOTAL)
# filter and select dates of experiment and ommit NAs
Size.data.EXPERIMENT <- Size.data.ALL %>% dplyr::filter(Date > 20190722) %>%  dplyr::select(Date, Tank.ID, Sw.Condition, Length, Notes) # select data since 20190723
Size.data.EXPERIMENT <- na.omit(Size.data.EXPERIMENT) # ommit NAs from the dataset
Size.data.EXPERIMENT # view table
# modify ID ref columns and merge with shell size table = shell_size_data
ID.reference.short <- ID.reference.all %>% dplyr::select(Tank.ID,TREATMENT.ID.TOTAL) # select columns desired from ID.references to merge with shell size below
shell_size_data <- merge(Size.data.EXPERIMENT,ID.reference.short,by="Tank.ID") # merge shell size data and ID reference
# modify shell_size_data for targetted columns and create new columns for different treatments
shell_size_data <- shell_size_data %>% dplyr::select(Date, Length, TREATMENT.ID.TOTAL)
shell_size_data$Treatment_history <- substr(shell_size_data$TREATMENT.ID.TOTAL, 1,1) # new column for treatment history
shell_size_data$Treatment.EXP_1 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 3,3) # new column for d1-7 exposure
shell_size_data$Treatment.EXP_2 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 4,4) # new column for d 15-21 exposure
# divide shell_size_data into the 4 different periods (pre, first 7 days, second 7 days, third 7 days of 21-day experiment)
# (1) Pre-experiment data
Size.pre <- shell_size_data %>% dplyr::filter(Date %in% 20190723)
Size.pre$Treatment.EXP_1 <- "NA" # first exposure NA - not needed in figure or analysis
Size.pre$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis # IMPORTANT! PRE-EXPERIMENT DATA
# (2 and 3) First 14 days of the expeiment - Same treatments for figure and analsis (hisotyr and Exp_1 NOT Exp_2 during last 7-day period)
Size.D.1.14 <- shell_size_data %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.D.1.14$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis
Size.D.1.7 <- Size.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.D.8.14 <- Size.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
# (4) Last 7 days of the experiment
Size.D.15.21 <- shell_size_data %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
# bind all data to one table
SizeTableFINAL <- rbind(Size.pre, Size.D.1.14, Size.D.15.21)
# NOTE - THESE ARE THE TARGETTED DATA FRAMES FOR FIGURES
# Size.pre
# Size.D.1.7
# Size.D.8.14
# Size.D.15.21
################################################################################################################### #
# STATISTICAL ANALYSIS  ########################################################################################### #
################################################################################################################### #
# PRE-EXPERIMENT T-TEST ------------------------------------------------------------------------------------------- #
# t.test of "pre" data prior to the experiment
t.test(Length~Treatment_history, data=Size.pre) # p-value = 0.5516; no difference between pCO2 treatment
# interaction plots
d.1.7.A <- interaction.plot(Size.D.1.7$Treatment_history, Size.D.1.7$Date, Size.D.1.7$Length)
d.1.7.B <- interaction.plot(Size.D.1.7$Treatment_history, Size.D.1.7$Treatment.EXP_1, Size.D.1.7$Length)
d.1.7.ints <- ggarrange(d.1.7.A,  d.1.7.B, d.1.7.C, ncol = 3, nrow = 1) # combine plots
d.1.7.ints # view interaction plots
d.1.7.C <- interaction.plot(Size.D.1.7$Date, Size.D.1.7$Treatment.EXP_1, Size.D.1.7$Length)
# three way ANOVA treatment and date
# resp.MEAN.µg.L.hr.mm
# resp.COUNT.µg.L.hr.indiv
Size.D.1.7$Date <- as.factor(Size.D.1.7$Date)
shapiro.test(residuals(threewayanova_D1.7)) # shaprio wilk test of model residuals p = 0.0297; non-normal distribution
threewayanova_D1.7 <- aov(Length ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.1.7) # run the model
hist((residuals(threewayanova_D1.7))) # histogram of model - looks normal
boxplot(residuals(threewayanova_D1.7)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D1.7),residuals(threewayanova_D1.7)) # plot residuals
qqnorm(residuals(threewayanova_D1.7)) # qqplot - looks normal
summary(threewayanova_D1.7) # significant effect of time and marginal effect of treatment history
# pre
Size_Days.pre.final <- Size.pre %>%
dplyr::group_by(Date, Treatment.EXP_1, Treatment_history, Treatment.EXP_2, TREATMENT.ID.TOTAL) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
# days 1 - 7
Size.D.1.7$TREATMENT <- paste(Size.D.1.7$Treatment_history, "H", Size.D.1.7$Treatment.EXP_1,sep="")
Size_Size.D.1.7.final <- Size.D.1.7 %>%
dplyr::select(Date, Length, TREATMENT) %>%
dplyr::group_by(Date, TREATMENT) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
# days 8 - 14
Size.D.8.14$TREATMENT <- paste(Size.D.8.14$Treatment_history, "H", Size.D.8.14$Treatment.EXP_1,sep="")
Size_Size.D.8.14.final <- Size.D.8.14 %>%
dplyr::select(Date, Length, TREATMENT) %>%
dplyr::group_by(Date, TREATMENT) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
# days 15 - 21
Size_Days.15.21.final <- Size.D.15.21 %>%
dplyr::select(Date, Length, TREATMENT.ID.TOTAL) %>%
dplyr::group_by(Date, TREATMENT.ID.TOTAL) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
##################################################### #
##################################################### #
########## PLOT MEAN ST ERROR  size  ################ #----------------------------------------------------------------------------------------------- #
##################################################### #
##################################################### #
pd <- position_dodge(0.25) # dodge between treatments to ease asthetics and interpretation
# FIGURE 1
Size_Days.pre.final$Date <- as.character(Size_Days.pre.final$Date) # call date as a character
FIGURE.size.pre <- ggplot(Size_Days.pre.final, aes(x=factor(Date), y=mean, colour=Treatment_history, group=Treatment_history)) +
geom_errorbar(aes(ymin=mean-std.error,
ymax=mean+std.error), width=.1, position=pd) +
geom_line(position=pd) +
theme_bw() +
xlab("Date") +
ylab("SIZE per individual") +
scale_colour_hue(name="Treatment",    # Legend label, use darker colors
breaks=c("AHA", "AHM", "AHS", "EHA","EHM", "EHS"),
labels=c("Amb-Amb", "Amb-Mod", "Amb-Sev", "Elev-Amb", "Elev-Mod", "Elev-Sev"), l=40) + # Use darker colors, lightness=40
ggtitle("Pre-experiment SIZE") +
geom_point(position=pd, shape=c(21, 24), size=3,fill=("white")) + # 21 is filled circle
#expand_limits(y=0) +                        # Expand y range
ylim(6.0,8.0) +
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme(legend.justification=c(1,1),
legend.position=c(1,1))               # Position legend in bottom right
FIGURE.size.pre  <- print(FIGURE.size.pre + scale_colour_manual(values = c("skyblue1", "tomato1"))+ theme(legend.position = "none"))
# FIGURE 2
# days 1 - 7 rel metabolic rate (per individual) ----------------------------------------------------------------------------------------------- #
Size_Size.D.1.7.final$Date <- as.factor(Size_Size.D.1.7.final$Date) # call date as a character
FIGURE.size_Size.D.1.7 <- ggplot(Size_Size.D.1.7.final, aes(x=factor(Date), y=mean, group=TREATMENT, colour=TREATMENT)) +
geom_errorbar(aes(ymin=mean-std.error,
ymax=mean+std.error), width=.1, position=pd) +
geom_line(position=pd) +
theme_bw() +
xlab("Date") +
ylab("SIZE per individual") +
scale_colour_hue(name="Treatment",    # Legend label, use darker colors
breaks=c("AHA", "AHM", "AHS", "EHA","EHM", "EHS"),
labels=c("Amb-Amb", "Amb-Mod", "Amb-Sev", "Elev-Amb", "Elev-Mod", "Elev-Sev"), l=40) + # Use darker colors, lightness=40
ggtitle("Days 1-7 SIZE") +
geom_point(position=pd, shape=c(21, 21, 21, 24, 24, 24,21, 21, 21, 24, 24, 24,21, 21, 21, 24, 24, 24), size=3, fill=("white")) + # 21 is filled circle
#expand_limits(y=0) +
ylim(6.0,8.0) +
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme(legend.justification=c(1,1),
legend.position=c(1,1))               # Position legend in bottom right
FIGURE.size_Size.D.1.7  <- print(FIGURE.size_Size.D.1.7 + scale_colour_manual(values = c("skyblue1", "deepskyblue3", "blue", "tomato1", "red1", "firebrick4"))+ theme(legend.position = "none"))
# FIGURE 3
# days 8-14 rel metabolic rate (per individual)----------------------------------------------------------------------------------------------- #
Size_Size.D.8.14.final$Date <- as.character(Size_Size.D.8.14.final$Date)
FIGURE.size_Size.D.8.14 <- ggplot(Size_Size.D.8.14.final, aes(x=factor(Date), y=mean, colour=TREATMENT, group=TREATMENT)) +
geom_errorbar(aes(ymin=mean-std.error,
ymax=mean+std.error), width=.1, position=pd) +
geom_line(position=pd) +
theme_bw() +
xlab("Date") +
ylab("SIZE per individual") +
scale_colour_hue(name="Treatment",    # Legend label, use darker colors
breaks=c("AHA", "AHM", "AHS", "EHA","EHM", "EHS"),
labels=c("Amb-Amb", "Amb-Mod", "Amb-Sev", "Elev-Amb", "Elev-Mod", "Elev-Sev"), l=40) + # Use darker colors, lightness=40
ggtitle("Days 8-14 SIZE") +
geom_point(position=pd, shape=c(21, 21, 21, 24, 24, 24,21, 21, 21, 24, 24, 24,21, 21, 21, 24, 24, 24), size=3, fill=("white")) + # 21 is filled circle
#expand_limits(y=0) +
ylim(6.0,8.0) +
#scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme(legend.justification=c(1,1),
legend.position=c(1,1))            # Position legend in bottom right
FIGURE.size_Size.D.8.14  <- print(FIGURE.size_Size.D.8.14 + scale_colour_manual(values = c("skyblue1", "deepskyblue3", "blue", "tomato1", "red1", "firebrick4"))+ theme(legend.position = "none"))
# FIGURE 4
# days 15-21 rel metabolic rate (per individual)    ----------------------------------------------------------------------------------------------- #
Size_Days.15.21.final$Date <- as.character(Size_Days.15.21.final$Date)
FIGURE.size_Days.15.21 <- ggplot(Size_Days.15.21.final, aes(x=factor(Date), y=mean, colour=TREATMENT.ID.TOTAL, group=TREATMENT.ID.TOTAL, shape = TREATMENT.ID.TOTAL)) +
geom_errorbar(aes(ymin=mean-std.error,
ymax=mean+std.error), width=.1, position=pd) +
geom_line(position=pd, width=.3) +
theme_bw() +
xlab("Date") +
ylab("SIZE per individual") +
scale_colour_hue(name="Treatment",    # Legend label, use darker colors
breaks=c("AHAA", "AHAM", "AHMA", "AHMM",
"AHSA","AHSM", "EHAA", "EHAM",
"EHMA", "EHMM", "EHSA", "EHSM"),
labels=c("Amb-Amb-Amb", "Amb-Amb-Mod", "Amb-Mod-Amb", "Amb-Mod-Mod",
"Amb-Sev-Amb", "Amb-Sev-Mod", "Elev-Amb-Amb","Elev-Amb-Mod",
"Elev-Mod-Amb", "Elev-Mod-Mod", "Elev-Sev-Amb", "Elev-Sev-Mod"), l=40) + # Use darker colors, lightness=40
ggtitle("Days 15-21 SIZE") +
geom_point(position=pd, shape=c(21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,  21, 21, 21, 21, 21, 21,
24, 24, 24, 24, 24, 24, 21, 21, 21, 21, 21, 21,  24, 24, 24, 24, 24, 24), size=3,
fill=c("firebrick4", "white", "red1", "white", "tomato1",
"white", "blue", "white", "deepskyblue3", "white", "skyblue1",
"white", "firebrick4", "white", "red1", "white", "tomato1",
"white", "blue", "white", "deepskyblue3", "white", "skyblue1",
"white", "firebrick4", "white", "red1", "white", "tomato1",
"white", "blue", "white", "deepskyblue3", "white", "skyblue1","white")) + # all the colors needed
#expand_limits(y=0) +
ylim(6.0,8.0) +
#scale_y_continuous(breaks=0:20*4) +                          # Set tick every 4
theme(legend.justification=c(1,1),legend.position=c(1,1))    # Position legend in bottom right
FIGURE.size_Days.15.21  <- print(FIGURE.size_Days.15.21 + scale_colour_manual(values = c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3",
"blue", "blue", "tomato1", "tomato1",
"red1", "red1", "firebrick4", "firebrick4")) + theme(legend.position = "none"))
# EXPERIMENTAL DESIGN KEY/SCHEMATIC FOR SIZE PLOT ------------------------------------- #
# interaction plots
Size.D.1.14$Date <- as.character(Size.D.1.14$Date) # make date as.character for interaction plots
interaction.plot(Size.D.8.14$Treatment_history, Size.D.8.14$Date, Size.D.8.14$Length)
interaction.plot(Size.D.8.14$Treatment_history, Size.D.8.14$Treatment.EXP_1, Size.D.8.14$Length)
interaction.plot(Size.D.8.14$Date, Size.D.8.14$Treatment.EXP_1, Size.D.8.14$Length)
# three way ANOVA treatment and date
Size.D.8.14$Date <- as.factor(Size.D.8.14$Date) # make datae as.factors for ANOVA model
threewayanova_D8.14 <- aov(Length ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.8.14) # run the model
threewayanova_D8.14 <- aov(Length ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.8.14) # run the model
shapiro.test(residuals(threewayanova_D8.14)) # shaprio wilk test of model residuals p = 0.0003904;  non-normal distribution
hist((residuals(threewayanova_D8.14))) # histogram of model - looks normal
boxplot(residuals(threewayanova_D8.14)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D8.14),residuals(threewayanova_D8.14)) # plot residuals
qqnorm(residuals(threewayanova_D8.14)) # qqplot - looks normal
summary(threewayanova_D8.14) # significant effect of time
# three way ANOVA treatment and date
Size.D.8.14$Date <- as.factor(Size.D.8.14$Date) # make datae as.factors for ANOVA model
threewayanova_D8.14 <- aov(Length ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.8.14) # run the model
shapiro.test(residuals(threewayanova_D8.14)) # shaprio wilk test of model residuals p = 0.0003904;  non-normal distribution
hist((residuals(threewayanova_D8.14))) # histogram of model - looks normal
boxplot(residuals(threewayanova_D8.14)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D8.14),residuals(threewayanova_D8.14)) # plot residuals
qqnorm(residuals(threewayanova_D8.14)) # qqplot - looks normal
summary(threewayanova_D8.14) # significant effect of time
summary(threewayanova_D8.14) # significant effect of time
# make date a character to address as a factor in the model
Size.D.15.21$Date <- as.character(Size.D.15.21$Date)
#interaction plots
interaction.plot(Size.D.15.21$Treatment_history, Size.D.15.21$Date, Size.D.15.21$Length)
interaction.plot(Size.D.15.21$Treatment_history, Size.D.15.21$Treatment.EXP_1, Size.D.15.21$Length)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.0005398;  non-normal distribution
# four way ANOVA treatment and date
fourwayanova_D15.21 <-aov(Length ~ Treatment_history*Treatment.EXP_1*Treatment.EXP_2*Date, data=Size.D.15.21)
interaction.plot(Size.D.15.21$Date, Size.D.15.21$Treatment.EXP_1, Size.D.15.21$Length)
hist((residuals(fourwayanova_D15.21)))# histogram of model - looks normal
boxplot(residuals(fourwayanova_D15.21)) #plot boxplot of residuals - some outliers present
qqnorm(residuals(fourwayanova_D15.21)) # qqplot - looks normal
plot(fitted(fourwayanova_D15.21),residuals(fourwayanova_D15.21)) # plot residuals
summary(fourwayanova_D15.21) # FIVE significant interaction between date and treatment
Days.8.14
st Modified: 20190822
#See Readme file for details
rm(list=ls()) #clears workspace
## install packages if you dont already have them in your library
if ("devtools" %in% rownames(installed.packages()) == 'FALSE') install.packages('devtools')
library(devtools)
if ("segmented" %in% rownames(installed.packages()) == 'FALSE') install.packages('segmented')
if ("plotrix" %in% rownames(installed.packages()) == 'FALSE') install.packages('plotrix')
if ("gridExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('gridExtra')
if ("LoLinR" %in% rownames(installed.packages()) == 'FALSE') install_github('colin-olito/LoLinR')
if ("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if ("chron" %in% rownames(installed.packages()) == 'FALSE') install.packages('chron')
if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
if ("lmtest" %in% rownames(installed.packages()) == 'FALSE') install.packages('lmtest')
if ("car" %in% rownames(installed.packages()) == 'FALSE') install.packages('car')
#Read in required libraries
##### Include Versions of libraries
#install_github('colin-olito/LoLinR')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('car')
library('lmtest')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('car')
library('lmtest')
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(lsmeans)        # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
# Set Working Directory:
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
############################################################################################# #
############################################################################################# #
#########################  RESP RATE DATA ################################################### #
############################################################################################# #
############################################################################################# #
# upload relative SMR data (calculation for this table in "Resp.Tables.R")
DATA <- read.csv(file="Data/SDR_data/Final_table_for_resp_analysis.csv", header=T) #read Size.info data
DATA.pre <- DATA %>%
dplyr::filter(Date %in% 20190723) # 21-day experiment began on 20190723
DATA.experiment <- DATA %>%
dplyr::filter(Date > 20190723) # 21-day experiment began on 20190725
DATA_Days.1.14 <- DATA.experiment %>%  # divide dataset into first 14 days (same treatment)
dplyr::filter(Date < 20190808)
DATA_Days.15.21 <- DATA.experiment %>%  # and last 7 days (same treatment)
dplyr::filter(Date > 20190807)
# t.test of "pre" data prior to the experiment
t.test(resp.COUNT.µg.L.hr.indiv~Treatment.history, data=DATA.pre) # p-value = 0.5516; no difference between pCO2 treatment
# MODELS FOR DAYS 1 - 7 -------------------------------------------------------- #
Days.1.7 <- DATA_Days.1.14 %>%
dplyr::filter(Date < 20190801 ) # filter dataframe for the correct dates
# make date a character to address as a factor in the model
Days.1.7$Date <- as.factor(Days.1.7$Date)
# interaction plots
interaction.plot(Days.1.7$Treatment.history, Days.1.7$Date, Days.1.7$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.1.7$Treatment.history, Days.1.7$Treatment.EXP_1, Days.1.7$resp.COUNT.µg.L.hr.indiv)
# two way ANOVA treatment and date
# resp.MEAN.µg.L.hr.mm
# resp.COUNT.µg.L.hr.indiv
threewayanova_D1.7 <- aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Date, data=Days.1.7) # run the model
interaction.plot(Days.1.7$Date, Days.1.7$Treatment.EXP_1, Days.1.7$resp.COUNT.µg.L.hr.indiv)
shapiro.test(residuals(threewayanova_D1.7)) # shaprio wilk test of model residuals p = 0.162; normal distribution
Days.1.7
# two way ANOVA treatment and date
# resp.MEAN.µg.L.hr.mm
# resp.COUNT.µg.L.hr.indiv
threewayanova_D1.7 <- aov(resp.MEAN.µg.L.hr.mm ~ Treatment.history*Treatment.EXP_1*Date, data=Days.1.7) # run the model
shapiro.test(residuals(threewayanova_D1.7)) # shaprio wilk test of model residuals p = 0.162; normal distribution
hist((residuals(threewayanova_D1.7)))
summary(threewayanova_D1.7) # marginal effect of treatment history
hist((residuals(threewayanova_D1.7)))
summary(threewayanova_D1.7) # marginal effect of treatment history
TukeyHSD(threewayanova_D1.7, 'Treatment.history', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
TukeyHSD(threewayanova_D1.7, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# two way ANOVA treatment and date
# resp.MEAN.µg.L.hr.mm
# resp.COUNT.µg.L.hr.indiv
threewayanova_D1.7 <- aov(resp.MEAN.µg.L.hr.mm ~ Treatment.history*Treatment.EXP_1*Date, data=Days.1.7) # run the model
summary(threewayanova_D1.7) # marginal effect of treatment history
TukeyHSD(threewayanova_D1.7, 'Treatment.history', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
TukeyHSD(threewayanova_D1.7, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
Days.8.14 <- DATA_Days.1.14 %>%
dplyr::filter(Date > 20190731) # make dataframe
# make date a character to address as a factor in the model
# interaction plots
interaction.plot(Days.8.14$Treatment.history, Days.8.14$Date, Days.8.14$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.8.14$Date, Days.8.14$Treatment.EXP_1, Days.8.14$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.8.14$Treatment.history, Days.8.14$Treatment.EXP_1, Days.8.14$resp.COUNT.µg.L.hr.indiv)
Days.8.14$Date <- as.factor(Days.8.14$Date)
# two way ANOVA treatment and date
threewayanova_D8.14 <- aov(resp.MEAN.µg.L.hr.mm ~ Treatment.history*Treatment.EXP_1*Date, data=Days.8.14) # run the model
shapiro.test(residuals(threewayanova_D8.14)) # shaprio wilk test of model residuals p = 0.8904; normal distribution
hist((residuals(threewayanova_D8.14)))
summary(threewayanova_D8.14) # significant effect of treatment
TukeyHSD(threewayanova_D8.14, 'Date', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# make date a character to address as a factor in the model
DATA_Days.15.21$Date <- as.factor(DATA_Days.15.21$Date)
#interaction plots
interaction.plot(DATA_Days.15.21$Treatment.history, DATA_Days.15.21$Date, DATA_Days.15.21$resp.COUNT.µg.L.hr.indiv)
interaction.plot(DATA_Days.15.21$Treatment.history, DATA_Days.15.21$Treatment.EXP_1, DATA_Days.15.21$resp.COUNT.µg.L.hr.indiv)
interaction.plot(DATA_Days.15.21$Date, DATA_Days.15.21$Treatment.EXP_1, DATA_Days.15.21$resp.COUNT.µg.L.hr.indiv)
# two way ANOVA treatment and date
fourwayanova_D15.21 <-aov(resp.MEAN.µg.L.hr.mm ~ Treatment.history*Treatment.EXP_1*Treatment.EXP_2*Date, data=DATA_Days.15.21)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.15
hist((residuals(fourwayanova_D15.21)))
summary(fourwayanova_D15.21) # significant interaction between date and treatment
TukeyHSD(fourwayanova_D15.21, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
DATA_Days.15.21
# two way ANOVA treatment and date
fourwayanova_D15.21 <-aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Treatment.EXP_2*Date, data=DATA_Days.15.21)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.15
hist((residuals(fourwayanova_D15.21)))
summary(fourwayanova_D15.21) # significant interaction between date and treatment
TukeyHSD(fourwayanova_D15.21, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# sig effect of : Treatment.history:Treatment.EXP_1
# EH:S-EH:A p = 0.0685313
RESP_Days.15.21.final <- DATA_Days.15.21 %>%
dplyr::group_by(Treatment.EXP_1, Treatment.history) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
RESP_Days.15.21.final
# two way ANOVA treatment and date
fourwayanova_D15.21 <-aov(resp.MEAN.µg.L.hr.mm ~ Treatment.history*Treatment.EXP_1*Treatment.EXP_2*Date, data=DATA_Days.15.21)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.15
hist((residuals(fourwayanova_D15.21)))
summary(fourwayanova_D15.21) # significant interaction between date and treatment
TukeyHSD(fourwayanova_D15.21, 'Treatment.history:Treatment.EXP_1', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# sig effect of : Treatment.history:Treatment.EXP_1
# EH:S-EH:A p = 0.0459861
RESP_Days.15.21.final <- DATA_Days.15.21 %>%
dplyr::group_by(Treatment.EXP_1, Treatment.history) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
RESP_Days.15.21.final
