# make date a character to address as a factor in the model
# interaction plots
interaction.plot(Days.8.14$Treatment.history, Days.8.14$Date, Days.8.14$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.8.14$Treatment.history, Days.8.14$Treatment.EXP_1, Days.8.14$resp.COUNT.µg.L.hr.indiv)
interaction.plot(Days.8.14$Date, Days.8.14$Treatment.EXP_1, Days.8.14$resp.COUNT.µg.L.hr.indiv)
Days.8.14$Date <- as.factor(Days.8.14$Date)
# two way ANOVA treatment and date
threewayanova_D8.14 <- aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Date, data=Days.8.14) # run the model
shapiro.test(residuals(threewayanova_D8.14)) # shaprio wilk test of model residuals p = 0.8904; normal distribution
hist((residuals(threewayanova_D8.14)))
summary(threewayanova_D8.14) # significant
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day14_lme_mod1 <- lme(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1,random=~1|Date,data=Days.8.14) # with random effect of Site
anova(Day14_lme_mod1) # model with time as random factor
Day14_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.8.14, REML=T)
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day14_lmer_mod1)
summary(Day14_lme_mod1)
summary(Day14_lmer_mod1)
Day14_lm_mod0 <- lm(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1,data=Days.8.14) # NULL model without time as random factor!
anova(Day14_lm_mod0) # NULL model results
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
AIC(Day14_lmer_mod1,Day14_lm_mod0) # AIC test
bbmle::AICtab(Day14_lmer_mod1,Day14_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.2
anova(Day14_lm_mod0) # NULL model results
summary(Day14_lm_mod0)
anova(Day14_lm_mod0) # NULL model results
summary(Day14_lm_mod0)
anova(Day14_lm_mod0) # NULL model results
# make date a character to address as a factor in the model
DATA_Days.15.21$Date <- as.factor(DATA_Days.15.21$Date)
#interaction plots
interaction.plot(DATA_Days.15.21$Treatment.history, DATA_Days.15.21$Date, DATA_Days.15.21$resp.COUNT.µg.L.hr.indiv)
interaction.plot(DATA_Days.15.21$Treatment.history, DATA_Days.15.21$Treatment.EXP_1, DATA_Days.15.21$resp.COUNT.µg.L.hr.indiv)
interaction.plot(DATA_Days.15.21$Date, DATA_Days.15.21$Treatment.EXP_1, DATA_Days.15.21$resp.COUNT.µg.L.hr.indiv)
# two way ANOVA treatment and date
fourwayanova_D15.21 <-aov(resp.COUNT.µg.L.hr.indiv ~ Treatment.history*Treatment.EXP_1*Treatment.EXP_2*Date, data=DATA_Days.15.21)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.15
hist((residuals(fourwayanova_D15.21)))
summary(fourwayanova_D15.21) # significant interaction be
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day21_lme_mod1 <- lme(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1,random=~1|Date,data=DATA_Days.15.21) # with random effect of Site
anova(Day21_lme_mod1) # model with time as random factor
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),DATA_Days.15.21, REML=T)
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day21_lme_mod1 <- lme(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2,random=~1|Date,data=DATA_Days.15.21) # with random effect of Site
anova(Day21_lme_mod1) # model with time as random factor
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day21_lmer_mod1)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lm_mod0 <- lm(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2,data=DATA_Days.15.21) # NULL model without time as random factor!
anova(Day21_lm_mod0) # NULL model results
anova(Day21_lm_mod0) # NULL model results
summary(fourwayanova_D15.21) # significant interaction between date and treatment
AIC(Day21_lmer_mod1,Day21_lm_mod0) # AIC test
bbmle::AICtab(Day21_lmer_mod1,Day21_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.6
AIC(Day21_lmer_mod1,Day21_lm_mod0) # AIC test
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
anova(Day21_lm_mod0) # NULL model results
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
anova(Day21_lme_mod1) # model with time as random factor
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day7_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.1.7, REML=T)
anova(Day7_lmer_mod1) # model with time as random factor - interceot is significant
anova(Day7_lmer_mod1) # model with time as random factor - interceot is significant
Day14_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.8.14, REML=T)
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day14_lme_mod1 <- lme(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1,random=~1|Date,data=Days.8.14) # with random effect of Site
anova(Day14_lme_mod1) # model with time as random factor
Day14_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.8.14, REML=T)
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
Day7_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.1.7, REML=T)
anova(Day7_lmer_mod1) # model with time as random factor - interceot is significant
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day7_lme_mod1 <- lme(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1,random=~1|Date,data=Days.1.7) # with random effect of Site
anova(Day7_lme_mod1) # model with time as random factor
Day7_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.1.7, REML=T)
anova(Day7_lmer_mod1) # model with time as random factor - interceot is significant
Day14_lm_mod0 <- lm(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1,data=Days.8.14) # NULL model without time as random factor!
anova(Day14_lm_mod0) # NULL model results
Day14_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1+(1|Date),Days.8.14, REML=T)
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
rm(list=ls()) #clears workspace
## install packages if you dont already have them in your library
if ("devtools" %in% rownames(installed.packages()) == 'FALSE') install.packages('devtools')
if ("segmented" %in% rownames(installed.packages()) == 'FALSE') install.packages('segmented')
if ("plotrix" %in% rownames(installed.packages()) == 'FALSE') install.packages('plotrix')
if ("gridExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('gridExtra')
if ("LoLinR" %in% rownames(installed.packages()) == 'FALSE') install_github('colin-olito/LoLinR')
if ("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if ("chron" %in% rownames(installed.packages()) == 'FALSE') install.packages('chron')
if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
#Read in required libraries
##### Include Versions of libraries
#install_github('colin-olito/LoLinR')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
# Load packages and pacage version/date/import/depends info
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(lsmeans)        # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
library(gridExtra)      # Version: 2.3, Date/Publication: 2017-09-09, Imports: gtable, grid, grDevices, graphics, utils
library(reshape)        # Version: 0.8.7, Date/Publication: 2017-08-06, Depends: R (>= 2.6.1) Imports: plyr
library(multcompView)   # Version: 0.1-7, Date/Publication: 2015-07-31, Imports: grid
library(Rmisc)
library(lmtest)
library(car)
library(ggpubr)
#Required Data files
# Set Working Directory:
# setwd("~/MyProjects/Geoduck_Conditioning/RAnalysis/") #set working
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
#Load Sample Info
Size.data <- read.csv(file="Data/Shell_length/20190628_shell_size.csv", header=T) #read sample.info data
Size.data.ALL <- read.csv(file="Data/Shell_length/Shell_length_data.csv", header=T) #read sample.info data
ID.reference.all <- read.csv(file="Data/Tank.ID.reference.subsequent.csv", header=T) #read sample.info data
################################################################################################################### #
# DATA CARPENTRY FOR FIGURES AND STATISTICAL ANALYSIS   ########################################################### #
################################################################################################################### #
# Merge ID.ref with shell size; select desired columns; divide into treatment periods; rbind to one table
# ID ref modifications - filter tank IDs for treatment periods
# ID.reference.D.1.14 <- ID.reference.all %>%  dplyr::filter(Tank.ID == 1:36) %>%  dplyr::select(Tank.ID, INITIAL.TREATMENT.ID)
# ID.reference.D.15.21 <- ID.reference.all  %>%  dplyr::select(Tank.ID, TREATMENT.ID.TOTAL)
# filter and select dates of experiment and ommit NAs
Size.data.EXPERIMENT <- Size.data.ALL %>% dplyr::filter(Date > 20190722) %>%  dplyr::select(Date, Tank.ID, Sw.Condition, Length, Notes, Tank.ID.SPLIT) # select data since 20190723
Size.data.EXPERIMENT <- Size.data.EXPERIMENT %>% filter_at(vars(Tank.ID), any_vars(!is.na(.))) # only ommit NA of Tank.ID
Size.data.EXPERIMENT # view table
# modify ID ref columns and merge with shell size table = shell_size_data
ID.reference.short <- ID.reference.all %>% dplyr::select(Tank.ID,TREATMENT.ID.TOTAL, Tank.ID.SPLIT) # select columns desired from ID.references to merge with shell size below
shell_size_data <- merge(Size.data.EXPERIMENT,ID.reference.short,by="Tank.ID") # merge shell size data and ID reference
shell_size_data <- shell_size_data %>%  dplyr::select(-Tank.ID.SPLIT.x)
colnames(shell_size_data)[7] <- "Tank.ID.SPLIT"
# modify shell_size_data for targetted columns and create new columns for different treatments
shell_size_data <- shell_size_data %>% dplyr::select(Date, Length, TREATMENT.ID.TOTAL,Tank.ID, Tank.ID.SPLIT)
shell_size_data$Treatment_history <- substr(shell_size_data$TREATMENT.ID.TOTAL, 1,1) # new column for treatment history
shell_size_data$Treatment.EXP_1 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 3,3) # new column for d1-7 exposure
shell_size_data$Treatment.EXP_2 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 4,4) # new column for d 15-21 exposure
# divide shell_size_data into the 4 different periods (pre, first 7 days, second 7 days, third 7 days of 21-day experiment)
# (1) Pre-experiment data
#Size.pre <- shell_size_data %>% dplyr::filter(Date %in% c(20190723,20190724))
Size.pre <- shell_size_data %>% dplyr::filter(Date %in% c(20190724))
Size.pre$Treatment.EXP_1 <- "NA" # first exposure NA - not needed in figure or analysis
Size.pre$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis # IMPORTANT! PRE-EXPERIMENT DATA
# (2 and 3) First 14 days of the expeiment - Same treatments for figure and analsis (hisotyr and Exp_1 NOT Exp_2 during last 7-day period)
Size.D.1.14 <- shell_size_data %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.D.1.14$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis
Size.D.1.7 <- Size.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.D.8.14 <- Size.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
# (4) Last 7 days of the experiment
Size.D.15.21 <- shell_size_data %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
# bind all data to one table
SizeTableFINAL <- rbind(Size.pre, Size.D.1.14, Size.D.15.21)
################################################################################################################### #
# DATA CARPENTRY FOR AVERAGE SHELL LENTH TO INITIAL VALUES BY BIOLOGICAL REPLICATE (CUP)        ################### #
################################################################################################################### #
# make a table of the mean and standard deviation of the pre experiment sizes by Tank.ID
pre_experiment <- SizeTableFINAL %>% filter(Date %in% 20190724)
tapply(pre_experiment$Length, pre_experiment$Treatment_history, mean) # mean value of Ambient and Elevated animals
PRE.Table <- as.table(tapply(pre_experiment$Length, (paste(pre_experiment$Treatment_history, pre_experiment$Tank.ID.SPLIT, sep ="_")), mean)) # mean value of treatment and tray
PRE.Table.melt <- melt(PRE.Table, id.vars=c("Tank.ID.SPLIT"))
PRE.Table.melt$Tank.ID.SPLIT <- substr(PRE.Table.melt$indices, 3,7)
MERGE_averages <- merge(SizeTableFINAL, PRE.Table.melt, by = "Tank.ID.SPLIT")
MERGE_averages$length.DIFF <- MERGE_averages$Length - MERGE_averages$value  # calculate the length difference
# PLAY OF THE DATA A BIT AND PLOT
#x_after <- MERGE_averages %>%  filter(Date > 20190724)
#x_20190731$Treatment_hist_EXP1 <- paste(a=x_20190731$Treatment_history, x_20190731$Treatment.EXP_1, sep = "")
#ggboxplot(x_after, x = "Date", y = "length.DIFF",  ylab = "length.difference (mm)",  fill = "Treatment.EXP_1",
#          palette = c( "rickandmorty"),add = "jitter", title = "Length_difference", xlab = "Shell length")
Size.DIFF.D.1.14 <- MERGE_averages %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.DIFF.D.1.7 <- Size.DIFF.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.DIFF.D.8.14 <- Size.DIFF.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
Size.DIFF.D.15.21 <- MERGE_averages %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
################################################################################################################### #
# STATISTICAL ANALYSIS  ########################################################################################### #
################################################################################################################### #
# PRE-EXPERIMENT T-TEST ------------------------------------------------------------------------------------------- #
library(ggpubr)
# t.test of "pre" data prior to the experiment
t.test(Length~Treatment_history, data=Size.pre) # p-value = 4.491e-05; difference between pCO2 treatment
mean.pre.length <- as.table(tapply(Size.pre$Length, Size.pre$Treatment_history, mean)) # mean value of Ambient and Elevated animals
mean.pre.length # view table
((mean.pre.length[2] - mean.pre.length[1]) / mean.pre.length[2])*100 # percent length diff of larger animals in elevated v. ambient
PRE_dens <- ggdensity(Size.pre, x = "Length", fill = "Treatment_history", title = "Pre_Experiment" ,palette = "jco")
PRE_dens
PRE_violin.DATE <- ggviolin(Size.pre, x = "Treatment_history", y = "Length", fill = "Treatment_history",
palette = c("#FC4E07", "#00AFBB"), add = "none", title = "Pre_Experiment")
PRE_violin.DATE <- PRE_violin.DATE %>% ggadd(c("boxplot", "jitter"), fill ="white")  # Add box plot
PRE_violin.DATE <- ggpar(PRE_violin.DATE, ylim = c(4,12))
PRE_violin.DATE
M <- as.table(tapply(Size.pre$Length, (paste(Size.pre$Treatment_history, Size.pre$Tank.ID)), mean)) # mean value of treatment and tray
M.melt <- melt(M, id.vars=c("TREAT_TANK.ID")) # make into a table
M.melt$TREAT <- substr(M.melt$indices, 1,1) # make new column for just treatment
tapply(M.melt$value, M.melt$TREAT, mean) # get the mean of treat from the mean of tank; NOTE: this is the same as the mean W/O the tank ID above
# look at the data for fun
tapply(Size.D.1.7$Length, (paste(Size.D.1.7$Treatment_history, Size.D.1.7$Treatment.EXP_1, Size.D.1.7$Date)), mean)
tapply(Size.D.8.14$Length, (paste(Size.D.8.14$Treatment_history,  Size.D.8.14$Treatment.EXP_1, Size.D.8.14$Date)), mean)
tapply(Size.D.15.21$Length, (paste(Size.D.15.21$Treatment_history, Size.D.15.21$Date)), mean)
# MODELS FOR DAYS 1 - 7 ------------------------------------------------------------------------------------------- #
# interaction plots
d.1.7.A <- interaction.plot(Size.D.1.7$Treatment_history, Size.D.1.7$Date, Size.D.1.7$Length)
d.1.7.B <- interaction.plot(Size.D.1.7$Treatment_history, Size.D.1.7$Treatment.EXP_1, Size.D.1.7$Length)
d.1.7.C <- interaction.plot(Size.D.1.7$Date, Size.D.1.7$Treatment.EXP_1, Size.D.1.7$Length)
d.1.7.ints <- ggarrange(d.1.7.A,  d.1.7.B, d.1.7.C, ncol = 3, nrow = 1) # combine plots
d.1.7.ints # view interaction plots
# three way ANOVA treatment and date
Size.D.1.7$Date <- as.factor(Size.D.1.7$Date) # make Date a factor
# model on raw data
threewayanova_D1.7 <- aov(Length ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.1.7) # run the model
shapiro.test(residuals(threewayanova_D1.7)) # shaprio wilk test of model residuals p = 0.0297; non-normal distribution
hist((residuals(threewayanova_D1.7))) # histogram of model - looks normal - slight left skew
boxplot(residuals(threewayanova_D1.7)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D1.7),residuals(threewayanova_D1.7)) # plot residuals
qqnorm(residuals(threewayanova_D1.7)) # qqplot - looks normal
# summary from the log model
summary(threewayanova_D1.7) # significant effect of time and marginal effect of treatment history (same as the raw data)
TukeyHSD(threewayanova_D1.7,  conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# model on transformed data
Size.D.1.7$Length.log <- log(Size.D.1.7$Length)
threewayanova_D1.7.LOG <- aov(Length.log ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.1.7) # run the model
shapiro.test(residuals(threewayanova_D1.7.LOG)) # shaprio wilk test of model residuals p = 0.8429; normal distribution (log worked)
hist((residuals(threewayanova_D1.7.LOG))) # histogram of model - looks normal
boxplot(residuals(threewayanova_D1.7.LOG)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D1.7.LOG),residuals(threewayanova_D1.7.LOG)) # plot residuals
qqnorm(residuals(threewayanova_D1.7.LOG)) # qqplot - looks normal
# summary from the log model
summary(threewayanova_D1.7.LOG) # significant effect of time and marginal effect of treatment history (same as the raw data)
TukeyHSD(threewayanova_D1.7.LOG, 'Date', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# significant difference between:
# summary from the log model
summary(threewayanova_D1.7) # significant effect of time and marginal effect of treatment history (same as the raw data)
# summary from the log model
summary(threewayanova_D1.7) # significant effect of time and marginal effect of treatment history (same as the raw data)
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day7_lme_mod1 <- lme(Length ~ Treatment_history*Treatment.EXP_1,random=~1|Date,data=Size.D.1.7) # with random effect of Site
anova(Day7_lme_mod1) # model with time as random factor
Day7_lmer_mod1 <- lmer(Length,Treatment_history*Treatment.EXP_1+(1|Date),Size.D.1.7, REML=T)
Day7_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1+(1|Date),Size.D.1.7, REML=T)
anova(Day7_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day7_lmer_mod1)
Day7_lm_mod0 <- lm(Length~Treatment_history*Treatment.EXP_1,data=Size.D.1.7) # NULL model without time as random factor!
anova(Day7_lm_mod0) # NULL model results
AIC(Day7_lmer_mod1,Day7_lm_mod0) # AIC test
bbmle::AICtab(Day7_lmer_mod1,Day7_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.2
Day7_lm_mod0 <- lm(Length~Treatment_history*Treatment.EXP_1,data=Size.D.1.7) # NULL model without time as random factor!
anova(Day7_lm_mod0) # NULL model results
Day7_lm_mod0 <- lm(Length~Treatment_history*Treatment.EXP_1,data=Size.D.1.7) # NULL model without time as random factor!
anova(Day7_lm_mod0) # NULL model results
AIC(Day7_lmer_mod1,Day7_lm_mod0) # AIC test
bbmle::AICtab(Day7_lmer_mod1,Day7_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.2
Day7_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1+(1|Date),Size.D.1.7, REML=T)
anova(Day7_lmer_mod1) # model with time as random factor - interceot is significant
# interaction plots
Size.D.1.14$Date <- as.character(Size.D.1.14$Date) # make date as.character for interaction plots
interaction.plot(Size.D.8.14$Treatment_history, Size.D.8.14$Date, Size.D.8.14$Length)
interaction.plot(Size.D.8.14$Treatment_history, Size.D.8.14$Treatment.EXP_1, Size.D.8.14$Length)
interaction.plot(Size.D.8.14$Date, Size.D.8.14$Treatment.EXP_1, Size.D.8.14$Length)
# three way ANOVA treatment and date
Size.D.8.14$Date <- as.factor(Size.D.8.14$Date) # make datae as.factors for ANOVA model
threewayanova_D8.14 <- aov(Length ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.8.14) # run the model
shapiro.test(residuals(threewayanova_D8.14)) # shaprio wilk test of model residuals p = 0.0003904;  non-normal distribution
hist((residuals(threewayanova_D8.14))) # histogram of model - looks normal
boxplot(residuals(threewayanova_D8.14)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D8.14),residuals(threewayanova_D8.14)) # plot residuals
qqnorm(residuals(threewayanova_D8.14)) # qqplot - looks normal
summary(threewayanova_D8.14) # significant effect of time
TukeyHSD(threewayanova_D8.14, 'Date', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# model on transformed data
Size.D.8.14$Length.log <- log(Size.D.8.14$Length)
threewayanova_D.8.14.LOG <- aov(Length.log ~ Treatment_history*Treatment.EXP_1*Date, data=Size.D.8.14) # run the model
shapiro.test(residuals(threewayanova_D.8.14.LOG)) # shaprio wilk test of model residuals p = 0.3392; normal distribution (log worked)
hist((residuals(threewayanova_D.8.14.LOG))) # histogram of model - looks normal
boxplot(residuals(threewayanova_D.8.14.LOG)) #plot boxplot of residuals - some outliers present
plot(fitted(threewayanova_D.8.14.LOG),residuals(threewayanova_D.8.14.LOG)) # plot residuals
qqnorm(residuals(threewayanova_D.8.14.LOG)) # qqplot - looks normal
# summary of transformed data
summary(threewayanova_D.8.14.LOG) # significant effect of time
TukeyHSD(threewayanova_D.8.14.LOG, 'Date', conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# significant difference between:
# 20190804-20190801   0.0011880
# 20190807-20190801   0.0132141
Day8.14_dens.DATE <- ggdensity(Size.D.8.14, x = "Length", fill = "Date", title = "Day 8-14_.by.date" ,palette = "jco")
Day8.14_dens.DATE
Day8.14_violin.DATE <- ggviolin(Size.D.8.14, x = "Date", y = "Length", fill = "Date",
palette = "jco", add = "none", title = "Day 8-14_.by.date")
Day8.14_violin.DATE <- Day8.14_violin.DATE %>% ggadd(c("boxplot", "jitter"), fill ="white")  # Add box plot
Day8.14_violin.DATE <- ggpar(Day8.14_violin.DATE, ylim = c(4,12))
Day8.14_violin.DATE
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day14_lme_mod1 <- lme(Length ~ Treatment_history*Treatment.EXP_1,random=~1|Date,data=Size.D.8.14) # with random effect of Site
anova(Day14_lme_mod1) # model with time as random factor
Day14_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1+(1|Date),Size.D.8.14, REML=T)
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day14_lmer_mod1)
Day14_lm_mod0 <- lm(Length~Treatment_history*Treatment.EXP_1,data=Size.D.8.14) # NULL model without time as random factor!
anova(Day14_lm_mod0) # NULL model results
AIC(Day14_lmer_mod1,Day14_lm_mod0) # AIC test
bbmle::AICtab(Day14_lmer_mod1,Day14_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.2
Day14_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1+(1|Date),Size.D.8.14, REML=T)
anova(Day14_lmer_mod1) # model with time as random factor - interceot is significant
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day21_lme_mod1 <- lme(Length ~ Treatment_history*Treatment.EXP_1,random=~1|Date,data=Size.D.15.21) # with random effect of Site
anova(Day21_lme_mod1) # model with time as random factor
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1+(1|Date),Size.D.15.21, REML=T)
summary(Day21_lmer_mod1)
Day21_lm_mod0 <- lm(Length~Treatment_history*Treatment.EXP_1,data=Size.D.15.21) # NULL model without time as random factor!
anova(Day21_lm_mod0) # NULL model results
AIC(Day21_lmer_mod1,Day21_lm_mod0) # AIC test
bbmle::AICtab(Day21_lmer_mod1,Day21_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.2
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1+(1|Date),Size.D.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
# summary of transformed data
summary(fourwayanova_D15.21) # significant effect of time and treatment history
Size.D.15.21$Date <- as.character(Size.D.15.21$Date)
#interaction plots
interaction.plot(Size.D.15.21$Treatment_history, Size.D.15.21$Date, Size.D.15.21$Length)
interaction.plot(Size.D.15.21$Treatment_history, Size.D.15.21$Treatment.EXP_1, Size.D.15.21$Length)
interaction.plot(Size.D.15.21$Date, Size.D.15.21$Treatment.EXP_1, Size.D.15.21$Length)
# four way ANOVA treatment and date
fourwayanova_D15.21 <-aov(Length ~ Treatment_history*Treatment.EXP_1*Treatment.EXP_2*Date, data=Size.D.15.21)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.0005398;  non-normal distribution
hist((residuals(fourwayanova_D15.21)))# histogram of model - looks normal
boxplot(residuals(fourwayanova_D15.21)) #plot boxplot of residuals - some outliers present
plot(fitted(fourwayanova_D15.21),residuals(fourwayanova_D15.21)) # plot residuals
qqnorm(residuals(fourwayanova_D15.21)) # qqplot - looks normal
# summary of transformed data
summary(fourwayanova_D15.21) # significant effect of time and treatment history
TukeyHSD(fourwayanova_D15.21, which ="Treatment_history:Treatment.EXP_1:Treatment.EXP_2", conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
#
# summary of transformed data
summary(fourwayanova_D15.21) # significant effect of time and treatment history
TukeyHSD(fourwayanova_D15.21, which ="Treatment_history:Treatment.EXP_1:Treatment.EXP_2", conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
# summary of transformed data
summary(fourwayanova_D15.21) # significant effect of time and treatment history
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day21_lme_mod1 <- lme(Length ~ Treatment_history*Treatment.EXP_1*Treatment.EXP_2,random=~1|Date,data=Size.D.15.21) # with random effect of Site
anova(Day21_lme_mod1) # model with time as random factor
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),Size.D.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lm_mod0 <- lm(Length~Treatment_history*Treatment.EXP_1*Treatment.EXP_2,data=Size.D.15.21) # NULL model without time as random factor!
anova(Day21_lm_mod0) # NULL model results
AIC(Day21_lmer_mod1,Day21_lm_mod0) # AIC test
bbmle::AICtab(Day21_lmer_mod1,Day21_lm_mod0) # delta AIC - AIC NULL > AIC w/random factor (time) - difference == 4.2
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),Size.D.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),Size.D.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
hist((residuals(Day21_lmer_mod1)))
TukeyHSD(Day21_lmer_mod1, conf.level=0.95)
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),Size.D.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
emmeans(Day21_lmer_mod1, list(pairwise ~ Treatment_history), adjust = "tukey")
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day21_lmer_mod1)
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
DATA_Days.15.21
# make date a character to address as a factor in the model
DATA_Days.15.21$Date <- as.factor(DATA_Days.15.21$Date)
DATA_Days.15.21
ad relative SMR data (calculation for this table in "Resp.Tables.R")
DATA <- read.csv(file="Data/SDR_data/Final_table_for_resp_analysis.csv", header=T) #read Size.info data
DATA.pre <- DATA %>%
dplyr::filter(Date %in% 20190723) # 21-day experiment began on 20190723
DATA.experiment <- DATA %>%
dplyr::filter(Date > 20190723) # 21-day experiment began on 20190725
DATA_Days.1.14 <- DATA.experiment %>%  # divide dataset into first 14 days (same treatment)
dplyr::filter(Date < 20190808)
DATA_Days.15.21 <- DATA.experiment %>%  # and last 7 days (same treatment)
dplyr::filter(Date > 20190807)
# LINEAR MIXED EFFECTS MODEL  (time as random and treatmetn(s) as fized factors)
Day21_lme_mod1 <- lme(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2,random=~1|Date,data=DATA_Days.15.21) # with random effect of Site
anova(Day21_lme_mod1) # model with time as random factor
Day21_lmer_mod1 <- lmer(resp.COUNT.µg.L.hr.indiv~Treatment.history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),DATA_Days.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day21_lmer_mod1)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
emmeans(Day21_lmer_mod1, list(pairwise ~ Treatment.history:Treatment.EXP_1 ), adjust = "tukey")
Directory:
# setwd("~/MyProjects/Geoduck_Conditioning/RAnalysis/") #set working
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
#Load Sample Info
Size.data <- read.csv(file="Data/Shell_length/20190628_shell_size.csv", header=T) #read sample.info data
Size.data.ALL <- read.csv(file="Data/Shell_length/Shell_length_data.csv", header=T) #read sample.info data
ID.reference.all <- read.csv(file="Data/Tank.ID.reference.subsequent.csv", header=T) #read sample.info data
################################################################################################################### #
# DATA CARPENTRY FOR FIGURES AND STATISTICAL ANALYSIS   ########################################################### #
################################################################################################################### #
# Merge ID.ref with shell size; select desired columns; divide into treatment periods; rbind to one table
# ID ref modifications - filter tank IDs for treatment periods
# ID.reference.D.1.14 <- ID.reference.all %>%  dplyr::filter(Tank.ID == 1:36) %>%  dplyr::select(Tank.ID, INITIAL.TREATMENT.ID)
# ID.reference.D.15.21 <- ID.reference.all  %>%  dplyr::select(Tank.ID, TREATMENT.ID.TOTAL)
# filter and select dates of experiment and ommit NAs
Size.data.EXPERIMENT <- Size.data.ALL %>% dplyr::filter(Date > 20190722) %>%  dplyr::select(Date, Tank.ID, Sw.Condition, Length, Notes, Tank.ID.SPLIT) # select data since 20190723
Size.data.EXPERIMENT <- Size.data.EXPERIMENT %>% filter_at(vars(Tank.ID), any_vars(!is.na(.))) # only ommit NA of Tank.ID
Size.data.EXPERIMENT # view table
# modify ID ref columns and merge with shell size table = shell_size_data
ID.reference.short <- ID.reference.all %>% dplyr::select(Tank.ID,TREATMENT.ID.TOTAL, Tank.ID.SPLIT) # select columns desired from ID.references to merge with shell size below
shell_size_data <- merge(Size.data.EXPERIMENT,ID.reference.short,by="Tank.ID") # merge shell size data and ID reference
shell_size_data <- shell_size_data %>%  dplyr::select(-Tank.ID.SPLIT.x)
colnames(shell_size_data)[7] <- "Tank.ID.SPLIT"
# modify shell_size_data for targetted columns and create new columns for different treatments
shell_size_data <- shell_size_data %>% dplyr::select(Date, Length, TREATMENT.ID.TOTAL,Tank.ID, Tank.ID.SPLIT)
shell_size_data$Treatment_history <- substr(shell_size_data$TREATMENT.ID.TOTAL, 1,1) # new column for treatment history
shell_size_data$Treatment.EXP_1 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 3,3) # new column for d1-7 exposure
shell_size_data$Treatment.EXP_2 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 4,4) # new column for d 15-21 exposure
# divide shell_size_data into the 4 different periods (pre, first 7 days, second 7 days, third 7 days of 21-day experiment)
# (1) Pre-experiment data
#Size.pre <- shell_size_data %>% dplyr::filter(Date %in% c(20190723,20190724))
Size.pre <- shell_size_data %>% dplyr::filter(Date %in% c(20190724))
Size.pre$Treatment.EXP_1 <- "NA" # first exposure NA - not needed in figure or analysis
Size.pre$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis # IMPORTANT! PRE-EXPERIMENT DATA
# (2 and 3) First 14 days of the expeiment - Same treatments for figure and analsis (hisotyr and Exp_1 NOT Exp_2 during last 7-day period)
Size.D.1.14 <- shell_size_data %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.D.1.14$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis
Size.D.1.7 <- Size.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.D.8.14 <- Size.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
# (4) Last 7 days of the experiment
Size.D.15.21 <- shell_size_data %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
# bind all data to one table
SizeTableFINAL <- rbind(Size.pre, Size.D.1.14, Size.D.15.21)
################################################################################################################### #
# DATA CARPENTRY FOR AVERAGE SHELL LENTH TO INITIAL VALUES BY BIOLOGICAL REPLICATE (CUP)        ################### #
################################################################################################################### #
# make a table of the mean and standard deviation of the pre experiment sizes by Tank.ID
pre_experiment <- SizeTableFINAL %>% filter(Date %in% 20190724)
tapply(pre_experiment$Length, pre_experiment$Treatment_history, mean) # mean value of Ambient and Elevated animals
PRE.Table <- as.table(tapply(pre_experiment$Length, (paste(pre_experiment$Treatment_history, pre_experiment$Tank.ID.SPLIT, sep ="_")), mean)) # mean value of treatment and tray
PRE.Table.melt <- melt(PRE.Table, id.vars=c("Tank.ID.SPLIT"))
PRE.Table.melt$Tank.ID.SPLIT <- substr(PRE.Table.melt$indices, 3,7)
MERGE_averages <- merge(SizeTableFINAL, PRE.Table.melt, by = "Tank.ID.SPLIT")
MERGE_averages$length.DIFF <- MERGE_averages$Length - MERGE_averages$value  # calculate the length difference
# PLAY OF THE DATA A BIT AND PLOT
#x_after <- MERGE_averages %>%  filter(Date > 20190724)
#x_20190731$Treatment_hist_EXP1 <- paste(a=x_20190731$Treatment_history, x_20190731$Treatment.EXP_1, sep = "")
#ggboxplot(x_after, x = "Date", y = "length.DIFF",  ylab = "length.difference (mm)",  fill = "Treatment.EXP_1",
#          palette = c( "rickandmorty"),add = "jitter", title = "Length_difference", xlab = "Shell length")
Size.DIFF.D.1.14 <- MERGE_averages %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.DIFF.D.1.7 <- Size.DIFF.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.DIFF.D.8.14 <- Size.DIFF.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
Size.DIFF.D.15.21 <- MERGE_averages %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
################################################################################################################### #
# STATISTICAL ANALYSIS  ########################################################################################### #
################################################################################################################### #
# PRE-EXPERIMENT T-TEST ------------------------------------------------------------------------------------------- #
library(ggpubr)
# t.test of "pre" data prior to the experiment
t.test(Length~Treatment_history, data=Size.pre) # p-value = 4.491e-05; difference between pCO2 treatment
mean.pre.length <- as.table(tapply(Size.pre$Length, Size.pre$Treatment_history, mean)) # mean value of Ambient and Elevated animals
mean.pre.length # view table
((mean.pre.length[2] - mean.pre.length[1]) / mean.pre.length[2])*100 # percent length diff of larger animals in elevated v. ambient
PRE_dens <- ggdensity(Size.pre, x = "Length", fill = "Treatment_history", title = "Pre_Experiment" ,palette = "jco")
PRE_dens
PRE_violin.DATE <- ggviolin(Size.pre, x = "Treatment_history", y = "Length", fill = "Treatment_history",
palette = c("#FC4E07", "#00AFBB"), add = "none", title = "Pre_Experiment")
PRE_violin.DATE <- PRE_violin.DATE %>% ggadd(c("boxplot", "jitter"), fill ="white")  # Add box plot
PRE_violin.DATE <- ggpar(PRE_violin.DATE, ylim = c(4,12))
PRE_violin.DATE
M <- as.table(tapply(Size.pre$Length, (paste(Size.pre$Treatment_history, Size.pre$Tank.ID)), mean)) # mean value of treatment and tray
M.melt <- melt(M, id.vars=c("TREAT_TANK.ID")) # make into a table
M.melt$TREAT <- substr(M.melt$indices, 1,1) # make new column for just treatment
tapply(M.melt$value, M.melt$TREAT, mean) # get the mean of treat from the mean of tank; NOTE: this is the same as the mean W/O the tank ID above
# look at the data for fun
tapply(Size.D.1.7$Length, (paste(Size.D.1.7$Treatment_history, Size.D.1.7$Treatment.EXP_1, Size.D.1.7$Date)), mean)
tapply(Size.D.8.14$Length, (paste(Size.D.8.14$Treatment_history,  Size.D.8.14$Treatment.EXP_1, Size.D.8.14$Date)), mean)
tapply(Size.D.15.21$Length, (paste(Size.D.15.21$Treatment_history, Size.D.15.21$Date)), mean)
# MODELS FOR DAYS 1 - 7 ------------------------------------------------------------------------------------------- #
# make date a character to address as a factor in the model
Size.D.15.21$Date <- as.character(Size.D.15.21$Date)
#interaction plots
interaction.plot(Size.D.15.21$Treatment_history, Size.D.15.21$Date, Size.D.15.21$Length)
interaction.plot(Size.D.15.21$Treatment_history, Size.D.15.21$Treatment.EXP_1, Size.D.15.21$Length)
interaction.plot(Size.D.15.21$Date, Size.D.15.21$Treatment.EXP_1, Size.D.15.21$Length)
# four way ANOVA treatment and date
fourwayanova_D15.21 <-aov(Length ~ Treatment_history*Treatment.EXP_1*Treatment.EXP_2*Date, data=Size.D.15.21)
shapiro.test(residuals(fourwayanova_D15.21)) # shaprio wilk test of model residuals p = 0.0005398;  non-normal distribution
hist((residuals(fourwayanova_D15.21)))# histogram of model - looks normal
boxplot(residuals(fourwayanova_D15.21)) #plot boxplot of residuals - some outliers present
plot(fitted(fourwayanova_D15.21),residuals(fourwayanova_D15.21)) # plot residuals
qqnorm(residuals(fourwayanova_D15.21)) # qqplot - looks normal
# summary of transformed data
summary(fourwayanova_D15.21) # significant effect of time and treatment history
TukeyHSD(fourwayanova_D15.21, which ="Treatment_history:Treatment.EXP_1:Treatment.EXP_2", conf.level=0.95) # tukey test on the effect of treatment with 95% confidence
#                diff          lwr        upr
Day21_lmer_mod1 <- lmer(Length~Treatment_history*Treatment.EXP_1*Treatment.EXP_2+(1|Date),Size.D.15.21, REML=T)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
summary(Day21_lmer_mod1)
anova(Day21_lmer_mod1) # model with time as random factor - interceot is significant
emmeans(Day21_lmer_mod1, list(pairwise ~ Treatment_history*Treatment.EXP_1*Treatment.EXP_2), adjust = "tukey")
