dplyr::select(-c('Treatment.ID.initial','Treatment.ID.SUBSQ')) # select all columns for ambient.all.2 BUT the initial and subs treat (now compiled in Treatment)
ambient.all.2
ambient.all
ambient.means.AMBIENT.HIST <- ambient.all.2 %>%
filter(Treatment %in% c("AH", "AHA","AHAA", "AHMA", "AHSA")) # only animals from ambient history
ambient.means.ELEVATED.HIST <- ambient.all.2 %>%
filter(Treatment %in% c("EHA", "EHAA", "EHMA", "EHSA")) # only animals from elevated history
ambient.means.AMBIENT.HIST
ambient.means.ELEVATED.HIST
AMBIENT.DATA <- merge(Resp.non.controls.AMBIENT.HIST, ambient.means.AMBIENT.HIST, by = 'Date')
View(AMBIENT.DATA)
as.data.frame(colnames(Resp.non.controls.all)) # view column order to make for loop
Resp.non.controls.all.2 <- Resp.non.controls.all %>%
select(Date, Treatment.ID.initial, Treatment.ID.SUBSQ, resp.MEAN.µg.L.hr.mm, resp.COUNT.µg.L.hr.indiv)
Resp.non.controls.DAYS.1.14 <- Resp.non.controls.all.2 %>%
dplyr::filter(Date < 20190808)
Resp.non.controls.DAYS.15.21 <- Resp.non.controls.all.2 %>%
dplyr::filter(Date > 20190807)
Resp.non.controls.DAYS.1.14 <- Resp.non.controls.all.2 %>% # filter the first 14 days under 6 treatments - this will simplify merging by treatment in next step
dplyr::filter(Date < 20190808)
Resp.non.controls.DAYS.15.21 <- Resp.non.controls.all.2 %>%  # filter the last 7 days (15 - 21) under 12 treatments - this will simplify merging by treatment in next step
dplyr::filter(Date > 20190807)
Resp.non.controls.DAYS.1.14$Treatment.ID.initial <- Resp.non.controls.DAYS.1.14$Treatment
Resp.non.controls.DAYS.1.14
Resp.non.controls.DAYS.1.14$Treatment <- Resp.non.controls.DAYS.1.14$Treatment.ID.initial
Resp.non.controls.DAYS.1.14
Resp.non.controls.DAYS.1.14 <- Resp.non.controls.all.2 %>% # filter the first 14 days under 6 treatments - this will simplify merging by treatment in next step
dplyr::filter(Date < 20190808)
Resp.non.controls.DAYS.1.14$Treatment <- Resp.non.controls.DAYS.1.14$Treatment.ID.initial
Resp.non.controls.DAYS.1.14
Resp.non.controls.DAYS.15.21$Treatment <- Resp.non.controls.DAYS.15.21$Treatment.ID.SUBSQ # "Treatment" to merge with the ambient means from days 15-21
Resp.non.controls.DAYS.15.21
Resp.non.controls.DAYS.15.21
# data table of means for all resp rates by animals in AMBIENT COND's
ambient.means.DAYS.1.14 <- Final.resp.table.EXP %>%
dplyr::filter(Date < 20190808)  %>%
dplyr::filter(Treatment.ID.initial %in% c("AH", "AHA", "EHA")) %>%
dplyr::group_by(Treatment.ID.initial, Date) %>% # call column to summarize
dplyr::summarise(mean_resp.MEAN.µg.L.hr.mm = mean(resp.MEAN.µg.L.hr.mm), # call resp corrected for mean shell length
mean_resp.COUNT.µg.L.hr.indiv = mean(resp.COUNT.µg.L.hr.indiv)) # call resp corrected for num. indivs.
ambient.means.DAYS.15.21 <- Final.resp.table.EXP %>%
dplyr::filter(Date > 20190807)  %>%
dplyr::filter(Treatment.ID.SUBSQ %in% c("AHAA", "AHMA", "AHSA", "EHAA", "EHMA", "EHSA"))  %>%
dplyr::group_by(Treatment.ID.SUBSQ, Date) %>% # call column to summarize
dplyr::summarise(mean_resp.MEAN.µg.L.hr.mm = mean(resp.MEAN.µg.L.hr.mm), # call resp corrected for mean shell length
mean_resp.COUNT.µg.L.hr.indiv = mean(resp.COUNT.µg.L.hr.indiv)) # call resp corrected for num. indivs.
AMBIENT.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = 'Date', 'Treatment')
AMBIENT.DATA
AMBIENT.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = c('Date', 'Treatment'))
ambient.means.DAYS.1.14
# data table of means for all resp rates by animals in AMBIENT COND's
ambient.means.I <- Final.resp.table.EXP %>%
dplyr::filter(Date < 20190808)  %>%
dplyr::filter(Treatment.ID.initial %in% c("AH", "AHA", "EHA")) %>%
dplyr::group_by(Treatment.ID.initial, Date) %>% # call column to summarize
dplyr::summarise(mean_resp.MEAN.µg.L.hr.mm = mean(resp.MEAN.µg.L.hr.mm), # call resp corrected for mean shell length
mean_resp.COUNT.µg.L.hr.indiv = mean(resp.COUNT.µg.L.hr.indiv)) # call resp corrected for num. indivs.
ambient.means.II <- Final.resp.table.EXP %>%
dplyr::filter(Date > 20190807)  %>%
dplyr::filter(Treatment.ID.SUBSQ %in% c("AHAA", "AHMA", "AHSA", "EHAA", "EHMA", "EHSA"))  %>%
dplyr::group_by(Treatment.ID.SUBSQ, Date) %>% # call column to summarize
dplyr::summarise(mean_resp.MEAN.µg.L.hr.mm = mean(resp.MEAN.µg.L.hr.mm), # call resp corrected for mean shell length
mean_resp.COUNT.µg.L.hr.indiv = mean(resp.COUNT.µg.L.hr.indiv)) # call resp corrected for num. indivs.
ambient.all <- rbind(ambient.means.I, ambient.means.II) # compile to one dataframe
# merge the initial and subsequent treatments to a single column in ambient.all
# this is not an elegant way to do it but it ggets the job done...
table <- data.frame(matrix(nrow = 31, ncol = 1)) # create new dataframe with equal rows as ambient all
colnames(table)<-c('Treatment') # name the single column of new dataframe as Treatment
table[1:13,1] <- as.character(ambient.all$Treatment.ID.initial[1:13]) # assign the initial treat
table[14:31,1] <- as.character(ambient.all$Treatment.ID.SUBSQ[14:31]) # assign the subseq treat - this is the target column in ambient all
ambient.all$Treatment <- table$Treatment # add this column to the table - review ambient.all
ambient.all.2 <- ambient.all %>%
dplyr::ungroup() %>%
dplyr::select(-c('Treatment.ID.initial','Treatment.ID.SUBSQ')) # select all columns for ambient.all.2 BUT the initial and subs treat (now compiled in Treatment)
ambient.means.DAYS.1.14 <- ambient.all.2 %>%
dplyr::filter(Date < 20190808)
ambient.means.DAYS.15.21 <- ambient.all.2 %>%
dplyr::filter(Date > 20190807)
ambient.means.DAYS.1.14
AMBIENT.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = c('Date', 'Treatment'))
AMBIENT.DATA
Resp.non.controls.DAYS.1.14
ambient.means.DAYS.1.14
AMBIENT.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = c('Date'))
AMBIENT.DATA
View(AMBIENT.DATA)
Resp.non.controls.DAYS.1.14 <- Resp.non.controls.all.2 %>% # filter the first 14 days under 6 treatments - this will simplify merging by treatment in next step
dplyr::filter(Date < 20190808)
Resp.non.controls.DAYS.1.14$Treatment <- Resp.non.controls.DAYS.1.14$Treatment.ID.initial # "Treatment" to merge with the ambient means from days 1-14
Resp.non.controls.DAYS.15.21 <- Resp.non.controls.all.2 %>%  # filter the last 7 days (15 - 21) under 12 treatments - this will simplify merging by treatment in next step
dplyr::filter(Date > 20190807)
Resp.non.controls.DAYS.15.21$Treatment <- Resp.non.controls.DAYS.15.21$Treatment.ID.SUBSQ # "Treatment" to merge with the ambient means from days 15-21
Resp.non.controls.DAYS.15.21
AMBIENT.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = c('Date'))
AMBIENT.DATA
AMBIENT.DATA
AMBIENT.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = c('Date'))
AMBIENT.DATA
Resp.non.controls.DAYS.1.14$Date_Treat <- paste((Resp.non.controls.DAYS.1.14$Date, 1,8), "_", substr(Resp.non.controls.DAYS.1.14$Treatment, 1,2))
Resp.non.controls.DAYS.1.14$Date_Treat <- paste(substr(Resp.non.controls.DAYS.1.14$Date, 1,8), "_", substr(Resp.non.controls.DAYS.1.14$Treatment, 1,2))
Resp.non.controls.DAYS.1.14$Date_Treat
Resp.non.controls.DAYS.1.14$Date_Treat <- paste(substr(Resp.non.controls.DAYS.1.14$Date, 1,8), substr(Resp.non.controls.DAYS.1.14$Treatment, 1,2))
Resp.non.controls.DAYS.1.14$Date_Treat
Resp.non.controls.DAYS.15.21$Date_Treat <- paste(substr(Resp.non.controls.DAYS.15.21$Date, 1,8), substr(Resp.non.controls.DAYS.15.21$Treatment, 1,3))
Resp.non.controls.DAYS.15.21$Date_Treat
Resp.non.controls.DAYS.1.14$Date_Treat <- paste(substr(Resp.non.controls.DAYS.1.14$Date, 1,8), substr(Resp.non.controls.DAYS.1.14$Treatment, 1,2))
ambient.means.DAYS.1.14$Date_Treat  <- paste(substr(ambient.means.DAYS.1.14$Date, 1,8), substr(ambient.means.DAYS.1.14$Treatment, 1,2))
Resp.non.controls.DAYS.15.21$Date_Treat <- paste(substr(Resp.non.controls.DAYS.15.21$Date, 1,8), substr(Resp.non.controls.DAYS.15.21$Treatment, 1,3))
ambient.means.DAYS.15.21$Date_Treat  <- paste(substr(ambient.means.DAYS.15.21$Date, 1,8), substr(ambient.means.DAYS.15.21$Treatment, 1,3))
ambient.means.DAYS.15.21
Resp.non.controls.DAYS.15.21
DAYS.15.21.DATA <- merge(Resp.non.controls.DAYS.15.21, ambient.means.DAYS.15.21, by = c('Date_Treat'))
DAYS.15.21.DATA
# merge the datasets
DAYS.1.14.DATA <- merge(Resp.non.controls.DAYS.1.14, ambient.means.DAYS.1.14, by = c('Date_Treat')) # day 1-14 data ready for the for loop
DAYS.1.14.DATA
df_Days.1.14 <- data.frame() # start dataframe
relative.resp.Days.1.14 <- data.frame(matrix(nrow = 1, ncol = 4)) # create dataframe to save cumunalitively during for loop
colnames(relative.resp.Days.1.14)<-c('Date', 'Treatment', 'rel.resp.COUNT', 'rel.resp.MEAN.LENGTH') # names for comuns in the for loop
DAYS.1.14.DATA
as.data.frame(colnames(DAYS.1.14.DATA)) # view column order to make for loop
as.data.frame(colnames(DAYS.1.14.DATA)) # view column order to make for loop
for(i in 1:nrow(DAYS.1.14.DATA)) {
relative.resp.Days.1.14$Date <- DAYS.1.14.DATA[i,2] # call Date
relative.resp.Days.1.14$Treatment <- DAYS.1.14.DATA[i,7] # call Treatment.x
relative.resp.Days.1.14$rel.resp.COUNT <- DAYS.1.14.DATA[i,10] - DAYS.1.14.DATA[i,6] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
relative.resp.Days.1.14$rel.resp.MEAN.LENGTH <- DAYS.1.14.DATA[i,9] - DAYS.1.14.DATA[i,5] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
df <- data.frame(relative.resp.Days.1.14) # name dataframe for this singl e row
df_Days.1.14 <- rbind(df_Days.1.14,df) #bind to a cumulative list dataframe
print(df_Days.1.14) # print to monitor progress
}
df_Days.1.14
df_Days.15.21 <- data.frame() # start dataframe
relative.resp.Days.15.21 <- data.frame(matrix(nrow = 1, ncol = 4)) # create dataframe to save cumunalitively during for loop
colnames(relative.resp.Days.15.21)<-c('Date', 'Treatment', 'rel.resp.COUNT', 'rel.resp.MEAN.LENGTH') # names for comuns in the for loop
as.data.frame(colnames(DAYS.15.21.DATA)) # view column order to make for loop
DAYS.15.21.DATA
as.data.frame(colnames(DAYS.15.21.DATA)) # view column order to make for loop
for(i in 1:nrow(DAYS.15.21.DATA)) {
relative.resp.Days.15.21$Date <- DAYS.15.21.DATA[i,2] # call Date
relative.resp.Days.15.21$Treatment <- DAYS.15.21.DATA[i,7] # call Treatment.x
relative.resp.Days.15.21$rel.resp.COUNT <- DAYS.15.21.DATA[i,10] - DAYS.15.21.DATA[i,6] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
relative.resp.Days.15.21$rel.resp.MEAN.LENGTH <- DAYS.15.21.DATA[i,9] - DAYS.15.21.DATA[i,5] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
df <- data.frame(relative.resp.Days.15.21) # name dataframe for this singl e row
df_Days.15.21 <- rbind(df_Days.15.21,df) #bind to a cumulative list dataframe
print(df_Days.15.21) # print to monitor progress
}
df_Days.15.21 # view data
df_Days.1.14
##################################################### #
##################################################### #
########## SUMMARISE FOR MEAN AND STAND ERROR ####### #
##################################################### #
##################################################### #
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n())))
##################################################### #
##################################################### #
########## SUMMARISE FOR MEAN AND STAND ERROR ####### #
##################################################### #
##################################################### #
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error)))
##################################################### #
##################################################### #
########## SUMMARISE FOR MEAN AND STAND ERROR ####### #
##################################################### #
##################################################### #
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.1.14.final
rel.resp_Days.15.21.final <- df_Days.15.21 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.15.21.final
rel.resp_Days.1.14.final
df_Days.1.14
##################################################### #
##################################################### #
########## SUMMARISE FOR MEAN AND STAND ERROR ####### #
##################################################### #
##################################################### #
df_Days.1.14$Date <- as.character(df_Days.1.14$Date)
df_Days.1.14$Treatment <- as.character(df_Days.1.14$Treatment)
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.1.14.final
rel.resp_Days.1.14.final
##################################################### #
##################################################### #
########## PLOT RELATIVE RESP TO MEAN AMBIENT ####### #
##################################################### #
##################################################### #
names(rel.resp_Days.1.14.final)
FIGUR.rel.resp.MEANLENGTH.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.MEAN.LENGTH_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.MEAN.LENGTH_mean-rel.resp.MEAN.LENGTH_std.error,
ymax=rel.resp.MEAN.LENGTH_mean+rel.resp.MEAN.LENGTH_std.error), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR corrected for mean shell length & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGUR.rel.resp.MEANLENGTH.Days1.14 # view figure
ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.MEAN.LENGTH_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.MEAN.LENGTH_mean-rel.resp.MEAN.LENGTH_std.error,
ymax=rel.resp.MEAN.LENGTH_mean+rel.resp.MEAN.LENGTH_std.error), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white")
ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.MEAN.LENGTH_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.MEAN.LENGTH_mean-rel.resp.MEAN.LENGTH_std.error,
ymax=rel.resp.MEAN.LENGTH_mean+rel.resp.MEAN.LENGTH_std.error), colour="black", width=.1) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white")
ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.MEAN.LENGTH_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.MEAN.LENGTH_mean-rel.resp.MEAN.LENGTH_std.error,
ymax=rel.resp.MEAN.LENGTH_mean+rel.resp.MEAN.LENGTH_std.error), colour="black", width=.1) +
geom_line() +
geom_point(position=pd, size=3, shape=21, fill="white")
pd <- position_dodge(0.1)
FIGURE.rel.resp.MEANLENGTH.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.MEAN.LENGTH_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.MEAN.LENGTH_mean-rel.resp.MEAN.LENGTH_std.error,
ymax=rel.resp.MEAN.LENGTH_mean+rel.resp.MEAN.LENGTH_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR corrected for mean shell length & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGUR.rel.resp.MEANLENGTH.Days1.14 # view figure
FIGURE.rel.resp.MEANLENGTH.Days1.14 # view figure
##################################################### #
##################################################### #
########## PLOT RELATIVE RESP TO MEAN AMBIENT ####### #
##################################################### #
##################################################### #
names(rel.resp_Days.1.14.final)
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.MEAN.LENGTH_mean-rel.resp.MEAN.LENGTH_std.error,
ymax=rel.resp.MEAN.LENGTH_mean+rel.resp.MEAN.LENGTH_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view figure
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_mean_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_mean_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view figure
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view figure
for(i in 1:nrow(DAYS.1.14.DATA)) {
relative.resp.Days.1.14$Date <- DAYS.1.14.DATA[i,2] # call Date
relative.resp.Days.1.14$Treatment <- DAYS.1.14.DATA[i,7] # call Treatment.x
relative.resp.Days.1.14$rel.resp.COUNT <- DAYS.1.14.DATA[i,6] - DAYS.1.14.DATA[i,10] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
relative.resp.Days.1.14$rel.resp.MEAN.LENGTH <- DAYS.1.14.DATA[i,5] - DAYS.1.14.DATA[i,9]  # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
df <- data.frame(relative.resp.Days.1.14) # name dataframe for this singl e row
df_Days.1.14 <- rbind(df_Days.1.14,df) #bind to a cumulative list dataframe
print(df_Days.1.14) # print to monitor progress
}
df_Days.1.14 # view data
df_Days.15.21 <- data.frame() # start dataframe
relative.resp.Days.15.21 <- data.frame(matrix(nrow = 1, ncol = 4)) # create dataframe to save cumunalitively during for loop
colnames(relative.resp.Days.15.21)<-c('Date', 'Treatment', 'rel.resp.COUNT', 'rel.resp.MEAN.LENGTH') # names for comuns in the for loop
as.data.frame(colnames(DAYS.15.21.DATA)) # view column order to make for loop
for(i in 1:nrow(DAYS.15.21.DATA)) {
relative.resp.Days.15.21$Date <- DAYS.15.21.DATA[i,2] # call Date
relative.resp.Days.15.21$Treatment <- DAYS.15.21.DATA[i,7] # call Treatment.x
relative.resp.Days.15.21$rel.resp.COUNT <- DAYS.15.21.DATA[i,6] - DAYS.15.21.DATA[i,10] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
relative.resp.Days.15.21$rel.resp.MEAN.LENGTH <-  DAYS.15.21.DATA[i,5] - DAYS.15.21.DATA[i,9]# (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
df <- data.frame(relative.resp.Days.15.21) # name dataframe for this singl e row
df_Days.15.21 <- rbind(df_Days.15.21,df) #bind to a cumulative list dataframe
print(df_Days.15.21) # print to monitor progress
}
df_Days.15.21 # view data
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.15.21.final <- df_Days.15.21 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
##################################################### #
##################################################### #
########## PLOT RELATIVE RESP TO MEAN AMBIENT ####### #
##################################################### #
##################################################### #
names(rel.resp_Days.1.14.final)
pd <- position_dodge(0.1)
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view figure
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.15.21.final <- df_Days.15.21 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.15.21.final
rel.resp_Days.1.14.final
for(i in 1:nrow(DAYS.1.14.DATA)) {
relative.resp.Days.1.14$Date <- DAYS.1.14.DATA[i,2] # call Date
relative.resp.Days.1.14$Treatment <- DAYS.1.14.DATA[i,7] # call Treatment.x
relative.resp.Days.1.14$rel.resp.COUNT <- DAYS.1.14.DATA[i,6] - DAYS.1.14.DATA[i,10] # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
relative.resp.Days.1.14$rel.resp.MEAN.LENGTH <- DAYS.1.14.DATA[i,5] - DAYS.1.14.DATA[i,9]  # (ambient mean for resp corrected for # indivs) - each non ambient resp value of the same treatment history
df <- data.frame(relative.resp.Days.1.14) # name dataframe for this singl e row
df_Days.1.14 <- rbind(df_Days.1.14,df) #bind to a cumulative list dataframe
print(df_Days.1.14) # print to monitor progress
}
df_Days.1.14 # view data
rel.resp_Days.1.14.final <- df_Days.1.14 %>%
dplyr::group_by(Date, Treatment) %>% # call column to summarize
dplyr::summarise_each(funs(mean,sd,std.error))
rel.resp_Days.1.14.final
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view figure
pd <- position_dodge(0.5)
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view figure
rel.resp_Days.15.21.final
# days 15- 21 rel metabolic rate (per individual)
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.15.21.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHAM", "AHMM", "AHSM", "EHAM", "EHMM", "EHSM"),
labels=c("Amb-Amb-Mod", "Amb-Mod-Mod", "Amb-Sev-Mod",
"Elev-Amb-Mod", "Elev-Mod-Mod", "Elev-Sev-Mod"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 15-21 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14
# days 1 - 14 rel metabolic rate (per individual)
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
# days 15- 21 rel metabolic rate (per individual)
FIGURE.rel.resp.COUNT.Days15.21 <- ggplot(rel.resp_Days.15.21.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHAM", "AHMM", "AHSM", "EHAM", "EHMM", "EHSM"),
labels=c("Amb-Amb-Mod", "Amb-Mod-Mod", "Amb-Sev-Mod",
"Elev-Amb-Mod", "Elev-Mod-Mod", "Elev-Sev-Mod"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 15-21 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days15.21
DAYS.15.21.DATA
# days 1 - 14 rel metabolic rate (per individual)
FIGURE.rel.resp.COUNT.Days1.14 <- ggplot(rel.resp_Days.1.14.final, aes(x=Date, y=rel.resp.COUNT_mean, colour=Treatment, group=Treatment)) +
geom_errorbar(aes(ymin=rel.resp.COUNT_mean-rel.resp.COUNT_std.error,
ymax=rel.resp.COUNT_mean+rel.resp.COUNT_std.error), colour="black", width=.1,position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
xlab("Date") +
ylab("SMR per individual & relative to Ambient") +
scale_colour_hue(name="Supplement type",    # Legend label, use darker colors
breaks=c("AHM", "AHS", "EHM", "EHS"),
labels=c("Amb-Mod", "Amb-Sev", "Elev-Mod", "Elev-Sev"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Days 1-14 relative metabolic rate") +
expand_limits(y=0) +                        # Expand y range
scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(1,0))               # Position legend in bottom right
FIGURE.rel.resp.COUNT.Days1.14 # view the plot
# Arrange plots
SMR.relative.plot <- ggarrange(Raw.vs.MEAN,FIGURE.rel.resp.COUNT.Days1.14, FIGURE.rel.resp.COUNT.Days15.21,ncol = 1, nrow = 2) # combine plots
SMR.relative.plot # view plots
# Arrange plots
SMR.relative.plot <- ggarrange(FIGURE.rel.resp.COUNT.Days1.14, FIGURE.rel.resp.COUNT.Days15.21,ncol = 1, nrow = 2) # combine plots
SMR.relative.plot # view plots
# ggsave to Output
ggsave(file="Output/SMR.relative.plot.pdf", SMR.relative.plot, width = 12, height = 8, units = c("in")) # respiration rate plots
