if ("LoLinR" %in% rownames(installed.packages()) == 'FALSE') install_github('colin-olito/LoLinR')
if ("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if ("chron" %in% rownames(installed.packages()) == 'FALSE') install.packages('chron')
if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
if ("lmtest" %in% rownames(installed.packages()) == 'FALSE') install.packages('lmtest')
if ("car" %in% rownames(installed.packages()) == 'FALSE') install.packages('car')
#Read in required libraries
##### Include Versions of libraries
#install_github('colin-olito/LoLinR')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('car')
library('lmtest')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
library('car')
library('lmtest')
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(ggpubr)
# Set Working Directory:
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
# upload the final resp rate data
Final.resp.table <- read.csv(file="Data/SDR_data/Final.resp.rates.csv", header=T) #read Size.info data
DATA <- read.csv(file="Data/SDR_data/Final_table_for_resp_analysis.csv", header=T) #read Size.info data
Final.resp.table.EXP <- Final.resp.table %>% # table for all data on and after 20190723
dplyr::filter(row.num > 22)
# EXPERIMENTAL DESIGN KEY/SCHEMATIC FOR SMR PLOT ------------------------------------- #
schematic.data <- read.csv(file="Data/SDR_data/Experimental.design.data_2.csv", header=T) #read Size.info data
schematic.data$x.val
pd <- position_dodge(0)
schematic.data$x.val <- as.numeric(schematic.data$x.val )
FIG.schematic.data <- ggplot(schematic.data, aes(x=x.val, y=y.val, colour=treat, group=treat)) +
geom_line() +
theme_bw() +
xlab("Experimental periods") +
ylab("") +
scale_colour_hue(name="treat",    # Legend label, use darker colors
breaks=c("AHAA", "AHAM", "AHMA", "AHMM",
"AHSA","AHSM", "EHAA", "EHAM",
"EHMA", "EHMM", "EHSA", "EHSM"),
labels=c("Amb-Amb-Amb", "Amb-Amb-Mod", "Amb-Mod-Amb", "Amb-Mod-Mod",
"Amb-Sev-Amb", "Amb-Sev-Mod", "Elev-Amb-Amb","Elev-Amb-Mod",
"Elev-Mod-Amb", "Elev-Mod-Mod", "Elev-Sev-Amb", "Elev-Sev-Mod"), l=40) + # Use darker colors, lightness=40
ggtitle("Experimental design schematic") +
geom_point(data = subset(schematic.data, x.val %in% c(1.00,2.00, 3.00, 4.00)),
position = pd, shape=c(21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,
21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,
21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,
21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24),
size=c(5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4),
fill=c("white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "firebrick4", "white", "red1", "white", "tomato1",
"white", "blue", "white", "deepskyblue3", "white", "skyblue1")) +
geom_vline(xintercept = c(1.5, 2.5, 3.5), linetype="dotted",
color = "black", size=0.5) # all the colors needed
FIG.schematic.data  <- print(FIG.schematic.data +
scale_colour_manual(values = c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3","blue", "blue", "tomato1", "tomato1",  "red1", "red1", "firebrick4", "firebrick4")) +
scale_x_discrete(labels=c("1" = "Pre", "2" = "Days 1-7","3" = "Days 8-14","4" = "Days 15-21")) +
theme(legend.position="none",panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),panel.border = element_blank(),
axis.ticks = element_blank(),axis.text.y=element_blank()) +
annotate(geom="text", x=c(1,1,1,1, # PRE
2,2,2,2,2,2,2,2, # DAYS 1 -7
3,3, # DAYS 8 - 14
4,4,4,4,4,4,4,4,4,4,4,4,4,4), # DAYS 15 - 21
y=c(0.5, 0.2, 9.5,3.5,  # PRE
0.5, 0.2, 11.7,9.7,7.7,5.7,3.7,1.7, # DAYS 1 -7
0.5, 0.2, # DAYS 8 - 14
0.5, 0.2, 12.2,11.2,10.2,9.2,8.2,7.2,6.2,5.2,4.2,3.2,2.2,1.2), # DAYS 15 - 21
label=c("3-month Conditioning", "(postlarval-juvenile)","EH", "AH", # PRE
"Secondary Exposure Period", "(7 Days)", "EHA","EHM","EHS","AHA","AHM","AHS", # DAYS 1 -7
"Ambient Recovery Period","(7 Days)",  # DAYS 8 - 14
"Tertiary Exposure Period","(7 Days)","EHAM","EHAA","EHMM","EHMA","EHSM","EHSA","AHAM","AHAA","AHMM","AHMA","AHSM","AHSA"), # DAYS 15 - 21
size =3, color="black"))
############################################################################################# #
############################################################################################# #
#########################  RESP RATE DATA ################################################### #
############################################################################################# #
############################################################################################# #
DATA
DATA.pre <- DATA %>% dplyr::filter(Date %in% 20190723) %>% dplyr::select(Date, resp.COUNT.µg.L.hr.indiv,resp.MEAN.µg.L.hr.mm, Treatment.history) # pre experiment
DATA.Days.1.7 <- DATA %>% dplyr::filter(Date %in% 20190725:20190731) %>% dplyr::select(Date, resp.COUNT.µg.L.hr.indiv,resp.MEAN.µg.L.hr.mm, Treatment.EXP_1, Treatment.history) # d 1 - 7 experiment
DATA_Days.8.14 <- DATA %>% dplyr::filter(Date %in% 20190801:20190807) %>% dplyr::select(Date, resp.COUNT.µg.L.hr.indiv,resp.MEAN.µg.L.hr.mm, Treatment.EXP_1, Treatment.history) # d 8 - 14 experiment
DATA_Days.15.21 <- DATA %>% dplyr::filter(Date %in% 20190808:20190814) %>% dplyr::select(Date, resp.COUNT.µg.L.hr.indiv,resp.MEAN.µg.L.hr.mm, Treatment.EXP_2, Treatment.history, Treatment.EXP_1) # d 15-21 experiment
########## mean and st error calculations ########################### #
# pre
resp_Days.pre.final <- DATA.pre %>%
dplyr::group_by(Date, Treatment.history) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
# days 1 - 7
resp_Days.1.7.final <- DATA.Days.1.7 %>%
dplyr::group_by(Date, Treatment.EXP_1,Treatment.history) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
resp_Days.1.7.final$TREATMENT <- paste(resp_Days.1.7.final$Treatment.history,resp_Days.1.7.final$Treatment.EXP_1, sep="") # IMPORTANT - this combines history and first treatment exposure for figure treatments
# days 8 - 14
resp_Days.8.14.final <- DATA_Days.8.14 %>%
dplyr::group_by(Date, Treatment.EXP_1, Treatment.history) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
resp_Days.8.14.final$TREATMENT <- paste(resp_Days.8.14.final$Treatment.history,resp_Days.8.14.final$Treatment.EXP_1, sep="") # IMPORTANT - this combines history and first treatment exposure for figure treatments
# days 15 - 21
resp_Days.15.21.final <- DATA_Days.15.21 %>%
dplyr::group_by(Date, Treatment.EXP_2, Treatment.EXP_1, Treatment.history, Treatment.EXP_1, Treatment.EXP_2) %>% # call column to summarize
dplyr::summarise_each(funs(mean,std.error))
resp_Days.15.21.final$TREATMENT <- paste(resp_Days.15.21.final$Treatment.history,resp_Days.15.21.final$Treatment.EXP_1,resp_Days.15.21.final$Treatment.EXP_2, sep="") # IMPORTANT - this combines history and first treatment exposure for figure treatments
##################################################### #
##################################################### #
########## PLOTS OF THE SIG EFFECTS  ################ #----------------------------------------------------------------------------------------------- #
##################################################### #
##################################################### #
# FIRST 7 DAYS (SECONDARY EXPOSURE) - SIG DIFFERENCE BTWN EHM AND AHM
DATA.pre$Treat <- substr(DATA.pre$Treatment.history, 1,1)
DATA.pre.PLOT <- ggviolin(DATA.pre, x = "Treat", y = "resp.COUNT.µg.L.hr.indiv",  ylab = "µg.L.hr.indiv",  fill = "Treat",
palette = c("#FC4E07", "#00AFBB"),add = "none", title = "A.Respiration_pre_experiment")
DATA.pre.PLOT <- DATA.pre.PLOT %>% ggadd(c("boxplot", "jitter"),shape ="Treat", fill = "white") # Add box plot
#DATA.pre.PLOT <- ggpar(DATA.pre.PLOT, ylim = c(-2,35))
DATA.pre.PLOT
DATA.pre.PLOTbox<- ggboxplot(DATA.pre, x = "Treat", y = "resp.COUNT.µg.L.hr.indiv",  ylab = "µg.L.hr.indiv",  fill = "Treat",
palette = c("#FC4E07", "#00AFBB"),add = "jitter", title = "Pre-conditioning", xlab = "Initial pCO2 Treatment")
DATA.pre.PLOTbox <- ggpar(DATA.pre.PLOTbox, ylim = c(-2,18))
DATA.pre.PLOTbox
DATA.pre.PLOTbox <- ggplot(DATA.pre, aes(x=Treat, y=resp.COUNT.µg.L.hr.indiv, fill =Treat, colour=Treat)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Respiration rate"~(~µg~O[2]*hr^{-1}*individual^{-1})), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treat))), size = 2, position = position_jitterdodge(jitter.width = 0.5))+
scale_colour_manual(values=c("skyblue1","tomato1")) +
scale_shape_manual(values=c(24, 21)) +
scale_fill_manual(values=c('white', 'white')) +
ylim(0,20) +
scale_x_discrete(labels = c("Ambient","Elevated")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
DATA.pre.PLOTbox # view the plot
# TREATMENT HISTORY (INITIAL EXPOSURE) - NO DIFFERENCE BTWN TREATMENT
DATA.Days.1.7$Treat.initial <- substr(DATA.Days.1.7$Treatment.history, 1,1)
DATA.Days.1.7$treat.hist.secondary <- paste(DATA.Days.1.7$Treatment.history, DATA.Days.1.7$Treatment.EXP_1, sep ="")
Days.1.7.PLOTbox <- ggplot(DATA.Days.1.7, aes(x=Treatment.EXP_1, y=resp.COUNT.µg.L.hr.indiv, fill =Treatment.history, colour=treat.hist.secondary)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Respiration rate"~(~µg~O[2]*hr^{-1}*individual^{-1})), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment.history))), size = 2, position = position_jitterdodge(jitter.width = 0.5))+
scale_colour_manual(values=c("skyblue1", "deepskyblue3","blue", "tomato1",  "red1", "firebrick4")) +
scale_shape_manual(values=c(24, 21)) +
scale_fill_manual(values=c('white', 'white')) +
ylim(0,20) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.1.7.PLOTbox # view the plot
# TREATMENT HISTORY (INITIAL EXPOSURE) - NO DIFFERENCE BTWN TREATMENT
DATA_Days.15.21$Treat.initial <- substr(DATA_Days.15.21$Treatment.history, 1,1)
DATA_Days.15.21$treat.TOTAL <- paste(DATA_Days.15.21$Treatment.history, DATA_Days.15.21$Treatment.EXP_1,DATA_Days.15.21$Treatment.EXP_2, sep ="")
Days.15.21.PLOTbox <- ggplot(DATA_Days.15.21, aes(x=Treatment.EXP_1, y=resp.COUNT.µg.L.hr.indiv, fill = treat.TOTAL, shape=treat.TOTAL, colour=treat.TOTAL)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Respiration rate"~(~µg~O[2]*hr^{-1}*individual^{-1})), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment.history))), size = 2, position = position_jitterdodge(jitter.width = 0.15)) +
scale_colour_manual(values=c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3",
"blue", "blue","tomato1","tomato1",
"red1", "red1", "firebrick4","firebrick4")) +
scale_shape_manual(values=c(24,1,2,21,
24,1,2,21,
24,1,2,21,24,2)) +
scale_fill_manual(values=c("white", "skyblue1","white", "deepskyblue3",
"white", "blue", "white", "tomato1",
"white", "red1", "white", "firebrick4","white", "firebrick4")) +
ylim(0,20) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.15.21.PLOTbox # view the plot
Resp.plots <- ggarrange(DATA.pre.PLOTbox, Days.1.7.PLOTbox, Days.15.21.PLOTbox, nrow = 1, widths = c(0.5, 1, 1), labels = c("A","B","C"))
RESP.days.plot.with.schematic <- ggarrange(FIG.schematic.data, Resp.plots,ncol = 1, nrow = 2, heights = c(1, 2.0), labels = "A") # combine plots
ggsave(file="Output/Resp.plots.pdf", RESP.days.plot.with.schematic, width = 12, height = 8, units = c("in")) # respiration rate plots
DATA_Days.15.21
DATA_Days.15.21
ggplot(DATA_Days.15.21, aes(x=Treatment.EXP_2, y=resp.COUNT.µg.L.hr.indiv, fill = treat.TOTAL, shape=treat.TOTAL, colour=treat.TOTAL)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Respiration rate"~(~µg~O[2]*hr^{-1}*individual^{-1})), x=expression("Tertiary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment.history))), size = 2, position = position_jitterdodge(jitter.width = 0.15)) +
scale_colour_manual(values=c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3",
"blue", "blue","tomato1","tomato1",
"red1", "red1", "firebrick4","firebrick4")) +
scale_shape_manual(values=c(24,1,2,21,
24,1,2,21,
24,1,2,21,24,2)) +
scale_fill_manual(values=c("white", "red1","white", "red1",
"white", "red1", "white", "red1",
"white", "red1", "white", "red1","white", "red1"))
Days.15.21.PLOTbox <- ggplot(DATA_Days.15.21, aes(x=Treatment.EXP_2, y=resp.COUNT.µg.L.hr.indiv, fill = treat.TOTAL, shape=treat.TOTAL, colour=treat.TOTAL)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Respiration rate"~(~µg~O[2]*hr^{-1}*individual^{-1})), x=expression("Tertiary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment.history))), size = 2, position = position_jitterdodge(jitter.width = 0.15)) +
scale_colour_manual(values=c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3",
"blue", "blue","tomato1","tomato1",
"red1", "red1", "firebrick4","firebrick4")) +
scale_shape_manual(values=c(24,1,2,21,
24,1,2,21,
24,1,2,21,24,2)) +
scale_fill_manual(values=c("white", "red1","white", "red1",
"white", "red1", "white", "red1",
"white", "red1", "white", "red1","white", "red1")) +
ylim(0,20) +
scale_x_discrete(labels = c("Ambient","Moderate")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.15.21.PLOTbox # view the plot
Resp.plots <- ggarrange(DATA.pre.PLOTbox, Days.1.7.PLOTbox, Days.15.21.PLOTbox, nrow = 1, widths = c(0.5, 1, 1), labels = c("A","B","C"))
RESP.days.plot.with.schematic <- ggarrange(FIG.schematic.data, Resp.plots,ncol = 1, nrow = 2, heights = c(1, 2.0), labels = "A") # combine plots
RESP.days.plot.with.schematic
ggsave(file="Output/Resp.plots.pdf", RESP.days.plot.with.schematic, width = 12, height = 8, units = c("in")) # respiration rate plots
odified: 20190628
#See Readme file for details
rm(list=ls()) #clears workspace
## install packages if you dont already have them in your library
if ("devtools" %in% rownames(installed.packages()) == 'FALSE') install.packages('devtools')
if ("segmented" %in% rownames(installed.packages()) == 'FALSE') install.packages('segmented')
if ("plotrix" %in% rownames(installed.packages()) == 'FALSE') install.packages('plotrix')
if ("gridExtra" %in% rownames(installed.packages()) == 'FALSE') install.packages('gridExtra')
if ("LoLinR" %in% rownames(installed.packages()) == 'FALSE') install_github('colin-olito/LoLinR')
if ("lubridate" %in% rownames(installed.packages()) == 'FALSE') install.packages('lubridate')
if ("chron" %in% rownames(installed.packages()) == 'FALSE') install.packages('chron')
if ("plyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('plyr')
if ("dplyr" %in% rownames(installed.packages()) == 'FALSE') install.packages('dplyr')
#Read in required libraries
##### Include Versions of libraries
#install_github('colin-olito/LoLinR')
library("ggplot2")
library("segmented")
library("plotrix")
library("gridExtra")
library("LoLinR")
library("lubridate")
library("chron")
library('plyr')
library('dplyr')
# Load packages and pacage version/date/import/depends info
library(dplyr)          # Version 0.7.6, Packaged: 2018-06-27, Depends: R (>= 3.1.2)Imports: assertthat (>= 0.2.0), bindrcpp (>= 0.2.0.9000), glue (>=1.1.1), magrittr (>= 1.5), methods, pkgconfig (>= 2.0.1), R6(>= 2.2.2), Rcpp (>= 0.12.15), rlang (>= 0.2.0), tibble (>=1.3.1), tidyselect (>= 0.2.3), utils
library(ggplot2)        # Version 2.2.1, Packaged: 2016-12-30, Depends: R (>= 3.1)Imports: digest, grid, gtable (>= 0.1.1), MASS, plyr (>= 1.7.1),reshape2, scales (>= 0.4.1), stats, tibble, lazyeval
library(ggpubr)         # Version: 0.1.8 Date: 2018-08-30, Depends: R (>= 3.1.0), ggplot2, magrittrImports: ggrepel, grid, ggsci, stats, utils, tidyr, purrr, dplyr(>=0.7.1), cowplot, ggsignif, scales, gridExtra, glue, polynom
library(Rmisc)          # Version: 1.5 Packaged: 2013-10-21, Depends: lattice, plyr
library(plotrix)        # Version: 3.7-4, Date/Publication: 2018-10-03
library(lsmeans)        # Version: 2.27-62, Date/Publication: 2018-05-11, Depends: methods, R (>= 3.2)
library(gridExtra)      # Version: 2.3, Date/Publication: 2017-09-09, Imports: gtable, grid, grDevices, graphics, utils
library(reshape)        # Version: 0.8.7, Date/Publication: 2017-08-06, Depends: R (>= 2.6.1) Imports: plyr
library(multcompView)   # Version: 0.1-7, Date/Publication: 2015-07-31, Imports: grid
library(Rmisc)
library(lmtest)
library(car)
library(ggpubr)
#Required Data files
# Set Working Directory:
# setwd("~/MyProjects/Geoduck_Conditioning/RAnalysis/") #set working
setwd("C:/Users/samjg/Documents/My_Projects/Inragenerational_thresholds_OA/RAnalysis/")
#Load Sample Info
Size.data <- read.csv(file="Data/Shell_length/20190628_shell_size.csv", header=T) #read sample.info data
Size.data.ALL <- read.csv(file="Data/Shell_length/Shell_length_data.csv", header=T) #read sample.info data
ID.reference.all <- read.csv(file="Data/Tank.ID.reference.subsequent.csv", header=T) #read sample.info data
################################################################################################################### #
# DATA CARPENTRY FOR FIGURES AND STATISTICAL ANALYSIS   ########################################################### #
################################################################################################################### #
# Merge ID.ref with shell size; select desired columns; divide into treatment periods; rbind to one table
# ID ref modifications - filter tank IDs for treatment periods
# ID.reference.D.1.14 <- ID.reference.all %>%  dplyr::filter(Tank.ID == 1:36) %>%  dplyr::select(Tank.ID, INITIAL.TREATMENT.ID)
# ID.reference.D.15.21 <- ID.reference.all  %>%  dplyr::select(Tank.ID, TREATMENT.ID.TOTAL)
# filter and select dates of experiment and ommit NAs
Size.data.EXPERIMENT <- Size.data.ALL %>% dplyr::filter(Date > 20190722) %>%  dplyr::select(Date, Tank.ID, Sw.Condition, Length, Notes, Tank.ID.SPLIT) # select data since 20190723
Size.data.EXPERIMENT <- Size.data.EXPERIMENT %>% filter_at(vars(Tank.ID), any_vars(!is.na(.))) # only ommit NA of Tank.ID
Size.data.EXPERIMENT # view table
# modify ID ref columns and merge with shell size table = shell_size_data
ID.reference.short <- ID.reference.all %>% dplyr::select(Tank.ID,TREATMENT.ID.TOTAL, Tank.ID.SPLIT) # select columns desired from ID.references to merge with shell size below
shell_size_data <- merge(Size.data.EXPERIMENT,ID.reference.short,by="Tank.ID") # merge shell size data and ID reference
shell_size_data <- shell_size_data %>%  dplyr::select(-Tank.ID.SPLIT.x)
colnames(shell_size_data)[7] <- "Tank.ID.SPLIT"
# modify shell_size_data for targetted columns and create new columns for different treatments
shell_size_data <- shell_size_data %>% dplyr::select(Date, Length, TREATMENT.ID.TOTAL,Tank.ID, Tank.ID.SPLIT)
shell_size_data$Treatment_history <- substr(shell_size_data$TREATMENT.ID.TOTAL, 1,1) # new column for treatment history
shell_size_data$Treatment.EXP_1 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 3,3) # new column for d1-7 exposure
shell_size_data$Treatment.EXP_2 <- substr(shell_size_data$TREATMENT.ID.TOTAL, 4,4) # new column for d 15-21 exposure
# divide shell_size_data into the 4 different periods (pre, first 7 days, second 7 days, third 7 days of 21-day experiment)
# (1) Pre-experiment data
#Size.pre <- shell_size_data %>% dplyr::filter(Date %in% c(20190723,20190724))
Size.pre <- shell_size_data %>% dplyr::filter(Date %in% c(20190724))
Size.pre$Treatment.EXP_1 <- "NA" # first exposure NA - not needed in figure or analysis
Size.pre$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis # IMPORTANT! PRE-EXPERIMENT DATA
# (2 and 3) First 14 days of the expeiment - Same treatments for figure and analsis (hisotyr and Exp_1 NOT Exp_2 during last 7-day period)
Size.D.1.14 <- shell_size_data %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.D.1.14$Treatment.EXP_2 <- "NA" # second exposure NA - not needed in figure or analysis
Size.D.1.7 <- Size.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.D.8.14 <- Size.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
# (4) Last 7 days of the experiment
Size.D.15.21 <- shell_size_data %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
# bind all data to one table
SizeTableFINAL <- rbind(Size.pre, Size.D.1.14, Size.D.15.21)
#####################################
##################################################################################################### #
# make a table of the mean and standard deviation of the pre experiment sizes by Tank.ID
pre_experiment <- SizeTableFINAL %>% filter(Date %in% 20190724)
tapply(pre_experiment$Length, pre_experiment$Treatment_history, mean) # mean value of Ambient and Elevated animals
PRE.Table <- as.table(tapply(pre_experiment$Length, (paste(pre_experiment$Treatment_history, pre_experiment$Tank.ID.SPLIT, sep ="_")), mean)) # mean value of treatment and tray
PRE.Table.melt <- melt(PRE.Table, id.vars=c("Tank.ID.SPLIT"))
PRE.Table.melt$Tank.ID.SPLIT <- substr(PRE.Table.melt$indices, 3,7)
MERGE_averages <- merge(SizeTableFINAL, PRE.Table.melt, by = "Tank.ID.SPLIT")
MERGE_averages$length.DIFF <- MERGE_averages$Length - MERGE_averages$value  # calculate the length difference
# PLAY OF THE DATA A BIT AND PLOT
#x_after <- MERGE_averages %>%  filter(Date > 20190724)
#x_20190731$Treatment_hist_EXP1 <- paste(a=x_20190731$Treatment_history, x_20190731$Treatment.EXP_1, sep = "")
#ggboxplot(x_after, x = "Date", y = "length.DIFF",  ylab = "length.difference (mm)",  fill = "Treatment.EXP_1",
#          palette = c( "rickandmorty"),add = "jitter", title = "Length_difference", xlab = "Shell length")
Size.DIFF.D.1.14 <- MERGE_averages %>% dplyr::filter(Date %in% 20190725:20190807)  # filter data with six treatments
Size.DIFF.D.1.7 <- Size.DIFF.D.1.14 %>% dplyr::filter(Date < 20190801 ) # IMPORTANT! DAYS 1 - 7 DATA
Size.DIFF.D.8.14 <- Size.DIFF.D.1.14 %>% dplyr::filter(Date > 20190731) # IMPORTANT! DAYS 8 - 14 DATA
Size.DIFF.D.15.21 <- MERGE_averages %>% dplyr::filter(Date > 20190807)  # IMPORTANT! DAYS 15 - 21 DATA
################################################################################################################### #
# STATISTICAL ANALYSIS  ####
##################################################### #
###### BOX PLOTS FOR THE RAW DATA    ################ #
########## PLOT MEAN ST ERROR  size  ################ #----------------------------------------------------------------------------------------------- #
##################################################### #
##################################################### #
# DIFF has both the raw length and the difference length data
Size.DIFF.D.1.7  # DAYS 1 - 7 DATA
Size.DIFF.D.8.14  #  DAYS 8 - 14 DATA
Size.DIFF.D.15.21 #  DAYS 15 - 21 DATA
Size.DIFF.D.1.7$Treat.hist.second <- paste(Size.DIFF.D.1.7$Treatment_history, Size.DIFF.D.1.7$Treatment.EXP_1, sept = "")
Size.DIFF.D.8.14$Treat.hist.second <- paste(Size.DIFF.D.1.7$Treatment_history, Size.DIFF.D.1.7$Treatment.EXP_1, sept = "")
Days.1.7.PLOTbox.length <- ggplot(Size.DIFF.D.1.7, aes(x=Treatment.EXP_1, y=Length, fill = Treatment_history, colour=Treat.hist.second)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0) +
theme_classic() +
labs(y=expression("Shell Growth"~(mm)), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment_history))), size = 2, position = position_jitterdodge(jitter.width = 0.1))+
scale_colour_manual(values=c("skyblue1","deepskyblue3","blue", "tomato1",  "red1", "firebrick4")) +
scale_shape_manual(values=c(24, 21)) +
scale_fill_manual(values=c("white", "white")) +
ylim(5,11) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.1.7.PLOTbox.length
Days.1.7.PLOTbox.lengthDIFF <- ggplot(Size.DIFF.D.1.7, aes(x=Treatment.EXP_1, y=length.DIFF, fill = Treatment_history, colour=Treat.hist.second)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0) +
theme_classic() +
labs(y=expression("Shell Growth"~(mm)), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment_history))), size = 2, position = position_jitterdodge(jitter.width = 0.1))+
scale_colour_manual(values=c("skyblue1","deepskyblue3","blue", "tomato1",  "red1", "firebrick4")) +
scale_shape_manual(values=c(24, 21)) +
scale_fill_manual(values=c("white", "white")) +
ylim(-2,5) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.1.7.PLOTbox.lengthDIFF
Days.8.14.PLOTbox.length <- ggplot(Size.DIFF.D.8.14, aes(x=Treatment.EXP_1, y=Length, fill = Treatment_history, colour=Treat.hist.second)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0) +
theme_classic() +
labs(y=expression("Shell Growth"~(mm)), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment_history))), size = 2, position = position_jitterdodge(jitter.width = 0.1))+
scale_colour_manual(values=c("skyblue1","deepskyblue3","blue", "tomato1",  "red1", "firebrick4")) +
scale_shape_manual(values=c(24, 21)) +
scale_fill_manual(values=c("white", "white")) +
ylim(5,11) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.8.14.PLOTbox.length
Days.8.14.PLOTbox.lengthDIFF <- ggplot(Size.DIFF.D.8.14, aes(x=Treatment.EXP_1, y=length.DIFF, fill = Treatment_history, colour=Treat.hist.second)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0) +
theme_classic() +
labs(y=expression("Shell Growth"~(mm)), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment_history))), size = 2, position = position_jitterdodge(jitter.width = 0.1))+
scale_colour_manual(values=c("skyblue1","deepskyblue3","blue", "tomato1",  "red1", "firebrick4")) +
scale_shape_manual(values=c(24, 21)) +
scale_fill_manual(values=c("white", "white")) +
ylim(-2,5) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.8.14.PLOTbox.lengthDIFF
Size.DIFF.D.15.21
Days.15.21.PLOTbox.length <- ggplot(Size.DIFF.D.15.21, aes(x=Treatment.EXP_2, y=Length, fill = TREATMENT.ID.TOTAL, shape=TREATMENT.ID.TOTAL, colour=TREATMENT.ID.TOTAL)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Shell Growth"~(mm)), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment_history ))), size = 1, position = position_jitterdodge(jitter.width = 0.2)) +
scale_colour_manual(values=c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3",
"blue", "blue","tomato1","tomato1",
"red1", "red1", "firebrick4","firebrick4")) +
scale_shape_manual(values=c(24,1,2,21,
24,1,2,21,
24,1,2,21,24,2)) +
scale_fill_manual(values=c("white", "red1","white", "red1",
"white", "red1", "white", "red1",
"white", "red1", "white", "red1","white", "red1")) +
ylim(5,11) +
scale_x_discrete(labels = c("Ambient","Moderate")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.15.21.PLOTbox.length
Days.15.21.PLOTbox.lengthDIFF <- ggplot(Size.DIFF.D.15.21, aes(x=Treatment.EXP_2, y=length.DIFF, fill = TREATMENT.ID.TOTAL, shape=TREATMENT.ID.TOTAL, colour=TREATMENT.ID.TOTAL)) +
geom_boxplot(position=position_dodge(0.8), outlier.size = 0, fill = "white") +
theme_classic() +
labs(y=expression("Shell Growth"~(mm)), x=expression("Secondary pCO"[2]~"Exposure")) +
geom_point((aes(shape = factor(Treatment_history ))), size = 1, position = position_jitterdodge(jitter.width = 0.2)) +
scale_colour_manual(values=c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3",
"blue", "blue","tomato1","tomato1",
"red1", "red1", "firebrick4","firebrick4")) +
scale_shape_manual(values=c(24,1,2,21,
24,1,2,21,
24,1,2,21,24,2)) +
scale_fill_manual(values=c("white", "red1","white", "red1",
"white", "red1", "white", "red1",
"white", "red1", "white", "red1","white", "red1")) +
ylim(-2,5) +
scale_x_discrete(labels = c("Ambient","Moderate", "Severe")) +
# theme(legend.title = element_blank()) just ommit the legend title
theme(legend.position = "none")
Days.15.21.PLOTbox.lengthDIFF
schematic.data <- read.csv(file="Data/SDR_data/Experimental.design.data_2.csv", header=T) #read Size.info data
schematic.data$x.val
pd <- position_dodge(0)
schematic.data$x.val <- as.numeric(schematic.data$x.val )
FIG.schematic.data <- ggplot(schematic.data, aes(x=x.val, y=y.val, colour=treat, group=treat)) +
geom_line() +
theme_bw() +
xlab("Experimental periods") +
ylab("") +
scale_colour_hue(name="treat",    # Legend label, use darker colors
breaks=c("AHAA", "AHAM", "AHMA", "AHMM",
"AHSA","AHSM", "EHAA", "EHAM",
"EHMA", "EHMM", "EHSA", "EHSM"),
labels=c("Amb-Amb-Amb", "Amb-Amb-Mod", "Amb-Mod-Amb", "Amb-Mod-Mod",
"Amb-Sev-Amb", "Amb-Sev-Mod", "Elev-Amb-Amb","Elev-Amb-Mod",
"Elev-Mod-Amb", "Elev-Mod-Mod", "Elev-Sev-Amb", "Elev-Sev-Mod"), l=40) + # Use darker colors, lightness=40
ggtitle("Experimental design schematic") +
geom_point(data = subset(schematic.data, x.val %in% c(1.00,2.00, 3.00, 4.00)),
position = pd, shape=c(21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,
21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,
21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24,
21, 21, 21, 21, 21, 21, 24, 24, 24, 24, 24, 24),
size=c(5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4,
5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4),
fill=c("white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "white", "white", "white", "white", "white",
"white", "firebrick4", "white", "red1", "white", "tomato1",
"white", "blue", "white", "deepskyblue3", "white", "skyblue1")) +
geom_vline(xintercept = c(1.5, 2.5, 3.5), linetype="dotted",
color = "black", size=0.5) # all the colors needed
FIG.schematic.data  <- print(FIG.schematic.data +
scale_colour_manual(values = c("skyblue1", "skyblue1", "deepskyblue3", "deepskyblue3","blue", "blue", "tomato1", "tomato1",  "red1", "red1", "firebrick4", "firebrick4")) +
scale_x_discrete(labels=c("1" = "Pre", "2" = "Days 1-7","3" = "Days 8-14","4" = "Days 15-21")) +
theme(legend.position="none",panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),panel.border = element_blank(),
axis.ticks = element_blank(),axis.text.y=element_blank()) +
annotate(geom="text", x=c(1,1,1,1, # PRE
2,2,2,2,2,2,2,2, # DAYS 1 -7
3,3, # DAYS 8 - 14
4,4,4,4,4,4,4,4,4,4,4,4,4,4), # DAYS 15 - 21
y=c(0.5, 0.2, 9.5,3.5,  # PRE
0.5, 0.2, 11.7,9.7,7.7,5.7,3.7,1.7, # DAYS 1 -7
0.5, 0.2, # DAYS 8 - 14
0.5, 0.2, 12.2,11.2,10.2,9.2,8.2,7.2,6.2,5.2,4.2,3.2,2.2,1.2), # DAYS 15 - 21
label=c("3-month Conditioning", "(postlarval-juvenile)","EH", "AH", # PRE
"Secondary Exposure Period", "(7 Days)", "EHA","EHM","EHS","AHA","AHM","AHS", # DAYS 1 -7
"Ambient Recovery Period","(7 Days)",  # DAYS 8 - 14
"Tertiary Exposure Period","(7 Days)","EHAM","EHAA","EHMM","EHMA","EHSM","EHSA","AHAM","AHAA","AHMM","AHMA","AHSM","AHSA"), # DAYS 15 - 21
size =3, color="black"))
# ASSEMBLE ALL PLOTS AND OUTPUT
# ASSEMBLE ALL PLOTS AND OUTPUT
shell.GROWTH.plots<- ggarrange(Days.1.7.PLOTbox.lengthDIFF,
Days.8.14.PLOTbox.lengthDIFF,
Days.15.21.PLOTbox.lengthDIFF, nrow = 1, ncol = 3, widths = c(1, 0.5, 1))
shell.GROWTH.plots.with.schematic<-ggarrange(FIG.schematic.data, shell.GROWTH.plots, nrow = 2, ncol = 1, heights = c(1, 2))
shell.LENGTH.plots <- ggarrange(Days.1.7.PLOTbox.length,
Days.8.14.PLOTbox.length,
Days.15.21.PLOTbox.length,  nrow = 1, ncol = 3, widths = c(1, 0.5, 1))
shell.LENGTH.plots.with.schematic<-ggarrange(FIG.schematic.data, shell.LENGTH.plots, nrow = 2, ncol = 1, heights = c(1, 2))
ggsave(file="Output/SHELL.GROWTH_plots.pdf", shell.GROWTH.plots.with.schematic, width = 12, height = 8, units = c("in")) # respiration rate plots
ggsave(file="Output/SHELL.LENGTH_plots.pdf", shell.LENGTH.plots.with.schematic, width = 12, height = 8, units = c("in")) # respiration rate plots
